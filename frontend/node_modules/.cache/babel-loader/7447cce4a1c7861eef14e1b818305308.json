{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/Nebe-data-vistualization/src/views/auth/signup/RestRegister.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Button, Alert } from 'react-bootstrap';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport useScriptRef from '../../../hooks/useScriptRef';\nimport { API_SERVER } from './../../../config/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RestRegister = ({\n  className,\n  ...rest\n}) => {\n  _s();\n\n  let history = useHistory();\n  const scriptedRef = useScriptRef();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: '',\n        email: '',\n        password: '',\n        submit: null\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        username: Yup.string().required('Username is required'),\n        password: Yup.string().max(255).required('Password is required')\n      }),\n      onSubmit: async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          axios.post(API_SERVER + 'users/register', {\n            username: values.username,\n            password: values.password,\n            email: values.email\n          }).then(function (response) {\n            if (response.data.success) {\n              history.push('/auth/signin');\n            } else {\n              setStatus({\n                success: false\n              });\n              setErrors({\n                submit: response.data.msg\n              });\n              setSubmitting(false);\n            }\n          }).catch(function (error) {\n            setStatus({\n              success: false\n            }); // setErrors({ submit: error.response.data.msg });\n\n            setSubmitting(false);\n          });\n        } catch (err) {\n          console.error(err);\n\n          if (scriptedRef.current) {\n            setStatus({\n              success: false\n            });\n            setErrors({\n              submit: err.message\n            });\n            setSubmitting(false);\n          }\n        }\n      },\n      children: ({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        className: className,\n        ...rest,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            error: touched.username && errors.username,\n            label: \"Username\",\n            placeholder: \"Username\",\n            name: \"username\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            type: \"email\",\n            value: values.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), touched.username && errors.username && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger form-text\",\n            children: errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            error: touched.email && errors.email,\n            label: \"Email Address\",\n            placeholder: \"Email Address\",\n            name: \"email\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            type: \"email\",\n            value: values.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), touched.email && errors.email && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger form-text\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 63\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            error: touched.password && errors.password,\n            label: \"Password\",\n            placeholder: \"Password\",\n            name: \"password\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            type: \"password\",\n            value: values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger form-text\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), errors.submit && /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: errors.submit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-checkbox  text-left mb-4 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"custom-control-input\",\n            id: \"customCheck1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"custom-control-label\",\n            htmlFor: \"customCheck1\",\n            children: \"Save credentials.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            mt: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-block\",\n              color: \"primary\",\n              disabled: isSubmitting,\n              size: \"large\",\n              type: \"submit\",\n              variant: \"primary\",\n              children: \"Sign UP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RestRegister, \"8pniik3tDsIDMGi4wqM8UHscjuU=\", false, function () {\n  return [useHistory, useScriptRef];\n});\n\n_c = RestRegister;\nexport default RestRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestRegister\");","map":{"version":3,"sources":["/Users/johndoe/Nebe-data-vistualization/src/views/auth/signup/RestRegister.js"],"names":["React","useHistory","Row","Col","Button","Alert","Yup","Formik","axios","useScriptRef","API_SERVER","RestRegister","className","rest","history","scriptedRef","username","email","password","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","post","then","response","data","success","push","msg","catch","error","err","console","current","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,KAA3B,QAAwC,iBAAxC;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,UAAT,QAA2B,4BAA3B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAa,KAAGC;AAAhB,CAAD,KAA4B;AAAA;;AAC7C,MAAIC,OAAO,GAAGb,UAAU,EAAxB;AACA,QAAMc,WAAW,GAAGN,YAAY,EAAhC;AAEA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,MAAD;AACI,MAAA,aAAa,EAAE;AACXO,QAAAA,QAAQ,EAAE,EADC;AAEXC,QAAAA,KAAK,EAAE,EAFI;AAGXC,QAAAA,QAAQ,EAAE,EAHC;AAIXC,QAAAA,MAAM,EAAE;AAJG,OADnB;AAOI,MAAA,gBAAgB,EAAEb,GAAG,CAACc,MAAJ,GAAaC,KAAb,CAAmB;AACjCJ,QAAAA,KAAK,EAAEX,GAAG,CAACgB,MAAJ,GAAaL,KAAb,CAAmB,uBAAnB,EAA4CM,GAA5C,CAAgD,GAAhD,EAAqDC,QAArD,CAA8D,mBAA9D,CAD0B;AAEjCR,QAAAA,QAAQ,EAAEV,GAAG,CAACgB,MAAJ,GAAaE,QAAb,CAAsB,sBAAtB,CAFuB;AAGjCN,QAAAA,QAAQ,EAAEZ,GAAG,CAACgB,MAAJ,GAAaC,GAAb,CAAiB,GAAjB,EAAsBC,QAAtB,CAA+B,sBAA/B;AAHuB,OAAnB,CAPtB;AAYI,MAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,QAAAA,SAAF;AAAaC,QAAAA,SAAb;AAAwBC,QAAAA;AAAxB,OAAf,KAA2D;AACjE,YAAI;AACApB,UAAAA,KAAK,CACAqB,IADL,CACUnB,UAAU,GAAG,gBADvB,EACyC;AACjCM,YAAAA,QAAQ,EAAES,MAAM,CAACT,QADgB;AAEjCE,YAAAA,QAAQ,EAAEO,MAAM,CAACP,QAFgB;AAGjCD,YAAAA,KAAK,EAAEQ,MAAM,CAACR;AAHmB,WADzC,EAMKa,IANL,CAMU,UAAUC,QAAV,EAAoB;AACtB,gBAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACvBnB,cAAAA,OAAO,CAACoB,IAAR,CAAa,cAAb;AACH,aAFD,MAEO;AACHP,cAAAA,SAAS,CAAC;AAAEM,gBAAAA,OAAO,EAAE;AAAX,eAAD,CAAT;AACAP,cAAAA,SAAS,CAAC;AAAEP,gBAAAA,MAAM,EAAEY,QAAQ,CAACC,IAAT,CAAcG;AAAxB,eAAD,CAAT;AACAP,cAAAA,aAAa,CAAC,KAAD,CAAb;AACH;AACJ,WAdL,EAeKQ,KAfL,CAeW,UAAUC,KAAV,EAAiB;AACpBV,YAAAA,SAAS,CAAC;AAAEM,cAAAA,OAAO,EAAE;AAAX,aAAD,CAAT,CADoB,CAEpB;;AACAL,YAAAA,aAAa,CAAC,KAAD,CAAb;AACH,WAnBL;AAoBH,SArBD,CAqBE,OAAOU,GAAP,EAAY;AACVC,UAAAA,OAAO,CAACF,KAAR,CAAcC,GAAd;;AACA,cAAIvB,WAAW,CAACyB,OAAhB,EAAyB;AACrBb,YAAAA,SAAS,CAAC;AAAEM,cAAAA,OAAO,EAAE;AAAX,aAAD,CAAT;AACAP,YAAAA,SAAS,CAAC;AAAEP,cAAAA,MAAM,EAAEmB,GAAG,CAACG;AAAd,aAAD,CAAT;AACAb,YAAAA,aAAa,CAAC,KAAD,CAAb;AACH;AACJ;AACJ,OA1CL;AAAA,gBA4CK,CAAC;AAAEc,QAAAA,MAAF;AAAUC,QAAAA,UAAV;AAAsBC,QAAAA,YAAtB;AAAoCC,QAAAA,YAApC;AAAkDC,QAAAA,YAAlD;AAAgEC,QAAAA,OAAhE;AAAyEtB,QAAAA;AAAzE,OAAD,kBACG;AAAM,QAAA,UAAU,MAAhB;AAAiB,QAAA,QAAQ,EAAEoB,YAA3B;AAAyC,QAAA,SAAS,EAAEjC,SAApD;AAAA,WAAmEC,IAAnE;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AACI,YAAA,SAAS,EAAC,cADd;AAEI,YAAA,KAAK,EAAEkC,OAAO,CAAC/B,QAAR,IAAoB0B,MAAM,CAAC1B,QAFtC;AAGI,YAAA,KAAK,EAAC,UAHV;AAII,YAAA,WAAW,EAAC,UAJhB;AAKI,YAAA,IAAI,EAAC,UALT;AAMI,YAAA,MAAM,EAAE2B,UANZ;AAOI,YAAA,QAAQ,EAAEC,YAPd;AAQI,YAAA,IAAI,EAAC,OART;AASI,YAAA,KAAK,EAAEnB,MAAM,CAACT;AATlB;AAAA;AAAA;AAAA;AAAA,kBADJ,EAYK+B,OAAO,CAAC/B,QAAR,IAAoB0B,MAAM,CAAC1B,QAA3B,iBAAuC;AAAO,YAAA,SAAS,EAAC,uBAAjB;AAAA,sBAA0C0B,MAAM,CAAC1B;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAZ5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAeI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AACI,YAAA,SAAS,EAAC,cADd;AAEI,YAAA,KAAK,EAAE+B,OAAO,CAAC9B,KAAR,IAAiByB,MAAM,CAACzB,KAFnC;AAGI,YAAA,KAAK,EAAC,eAHV;AAII,YAAA,WAAW,EAAC,eAJhB;AAKI,YAAA,IAAI,EAAC,OALT;AAMI,YAAA,MAAM,EAAE0B,UANZ;AAOI,YAAA,QAAQ,EAAEC,YAPd;AAQI,YAAA,IAAI,EAAC,OART;AASI,YAAA,KAAK,EAAEnB,MAAM,CAACR;AATlB;AAAA;AAAA;AAAA;AAAA,kBADJ,EAYK8B,OAAO,CAAC9B,KAAR,IAAiByB,MAAM,CAACzB,KAAxB,iBAAiC;AAAO,YAAA,SAAS,EAAC,uBAAjB;AAAA,sBAA0CyB,MAAM,CAACzB;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAZtC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ,eA6BI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AACI,YAAA,SAAS,EAAC,cADd;AAEI,YAAA,KAAK,EAAE8B,OAAO,CAAC7B,QAAR,IAAoBwB,MAAM,CAACxB,QAFtC;AAGI,YAAA,KAAK,EAAC,UAHV;AAII,YAAA,WAAW,EAAC,UAJhB;AAKI,YAAA,IAAI,EAAC,UALT;AAMI,YAAA,MAAM,EAAEyB,UANZ;AAOI,YAAA,QAAQ,EAAEC,YAPd;AAQI,YAAA,IAAI,EAAC,UART;AASI,YAAA,KAAK,EAAEnB,MAAM,CAACP;AATlB;AAAA;AAAA;AAAA;AAAA,kBADJ,EAYK6B,OAAO,CAAC7B,QAAR,IAAoBwB,MAAM,CAACxB,QAA3B,iBAAuC;AAAO,YAAA,SAAS,EAAC,uBAAjB;AAAA,sBAA0CwB,MAAM,CAACxB;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAZ5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BJ,EA4CKwB,MAAM,CAACvB,MAAP,iBACG,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,OAAO,EAAC,QAAf;AAAA,sBAAyBuB,MAAM,CAACvB;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBA7CR,eAkDI;AAAK,UAAA,SAAS,EAAC,qDAAf;AAAA,kCACI;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,SAAS,EAAC,sBAAjC;AAAwD,YAAA,EAAE,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,SAAS,EAAC,sBAAjB;AAAwC,YAAA,OAAO,EAAC,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlDJ,eAyDI,QAAC,GAAD;AAAA,iCACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACI,QAAC,MAAD;AACI,cAAA,SAAS,EAAC,WADd;AAEI,cAAA,KAAK,EAAC,SAFV;AAGI,cAAA,QAAQ,EAAE2B,YAHd;AAII,cAAA,IAAI,EAAC,OAJT;AAKI,cAAA,IAAI,EAAC,QALT;AAMI,cAAA,OAAO,EAAC,SANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAzDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AA7CR;AAAA;AAAA;AAAA;AAAA,YADJ,eAwHI;AAAA;AAAA;AAAA;AAAA,YAxHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4HH,CAhID;;GAAMnC,Y;UACYV,U,EACMQ,Y;;;KAFlBE,Y;AAkIN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Button, Alert } from 'react-bootstrap';\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport useScriptRef from '../../../hooks/useScriptRef';\nimport { API_SERVER } from './../../../config/constant';\n\nconst RestRegister = ({ className, ...rest }) => {\n    let history = useHistory();\n    const scriptedRef = useScriptRef();\n\n    return (\n        <React.Fragment>\n            <Formik\n                initialValues={{\n                    username: '',\n                    email: '',\n                    password: '',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    username: Yup.string().required('Username is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        axios\n                            .post(API_SERVER + 'users/register', {\n                                username: values.username,\n                                password: values.password,\n                                email: values.email\n                            })\n                            .then(function (response) {\n                                if (response.data.success) {\n                                    history.push('/auth/signin');\n                                } else {\n                                    setStatus({ success: false });\n                                    setErrors({ submit: response.data.msg });\n                                    setSubmitting(false);\n                                }\n                            })\n                            .catch(function (error) {\n                                setStatus({ success: false });\n                                // setErrors({ submit: error.response.data.msg });\n                                setSubmitting(false);\n                            });\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} className={className} {...rest}>\n                        <div className=\"form-group mb-3\">\n                            <input\n                                className=\"form-control\"\n                                error={touched.username && errors.username}\n                                label=\"Username\"\n                                placeholder=\"Username\"\n                                name=\"username\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                type=\"email\"\n                                value={values.username}\n                            />\n                            {touched.username && errors.username && <small className=\"text-danger form-text\">{errors.username}</small>}\n                        </div>\n                        <div className=\"form-group mb-3\">\n                            <input\n                                className=\"form-control\"\n                                error={touched.email && errors.email}\n                                label=\"Email Address\"\n                                placeholder=\"Email Address\"\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                type=\"email\"\n                                value={values.email}\n                            />\n                            {touched.email && errors.email && <small className=\"text-danger form-text\">{errors.email}</small>}\n                        </div>\n                        <div className=\"form-group mb-4\">\n                            <input\n                                className=\"form-control\"\n                                error={touched.password && errors.password}\n                                label=\"Password\"\n                                placeholder=\"Password\"\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                type=\"password\"\n                                value={values.password}\n                            />\n                            {touched.password && errors.password && <small className=\"text-danger form-text\">{errors.password}</small>}\n                        </div>\n\n                        {errors.submit && (\n                            <Col sm={12}>\n                                <Alert variant=\"danger\">{errors.submit}</Alert>\n                            </Col>\n                        )}\n\n                        <div className=\"custom-control custom-checkbox  text-left mb-4 mt-2\">\n                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                            <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\n                                Save credentials.\n                            </label>\n                        </div>\n\n                        <Row>\n                            <Col mt={2}>\n                                <Button\n                                    className=\"btn-block\"\n                                    color=\"primary\"\n                                    disabled={isSubmitting}\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"primary\"\n                                >\n                                    Sign UP\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                )}\n            </Formik>\n            <hr />\n        </React.Fragment>\n    );\n};\n\nexport default RestRegister;\n"]},"metadata":{},"sourceType":"module"}