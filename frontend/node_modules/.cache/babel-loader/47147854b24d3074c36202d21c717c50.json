{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.byteSize = factory());\n})(this, function () {\n  'use strict';\n  /**\n   * @module byte-size\n   */\n\n  let defaultOptions = {};\n\n  const _options = new WeakMap();\n\n  class ByteSize {\n    constructor(bytes, options) {\n      options = Object.assign({\n        units: 'metric',\n        precision: 1\n      }, defaultOptions, options);\n\n      _options.set(this, options);\n\n      const tables = {\n        metric: [{\n          from: 0,\n          to: 1e3,\n          unit: 'B',\n          long: 'bytes'\n        }, {\n          from: 1e3,\n          to: 1e6,\n          unit: 'kB',\n          long: 'kilobytes'\n        }, {\n          from: 1e6,\n          to: 1e9,\n          unit: 'MB',\n          long: 'megabytes'\n        }, {\n          from: 1e9,\n          to: 1e12,\n          unit: 'GB',\n          long: 'gigabytes'\n        }, {\n          from: 1e12,\n          to: 1e15,\n          unit: 'TB',\n          long: 'terabytes'\n        }, {\n          from: 1e15,\n          to: 1e18,\n          unit: 'PB',\n          long: 'petabytes'\n        }, {\n          from: 1e18,\n          to: 1e21,\n          unit: 'EB',\n          long: 'exabytes'\n        }, {\n          from: 1e21,\n          to: 1e24,\n          unit: 'ZB',\n          long: 'zettabytes'\n        }, {\n          from: 1e24,\n          to: 1e27,\n          unit: 'YB',\n          long: 'yottabytes'\n        }],\n        metric_octet: [{\n          from: 0,\n          to: 1e3,\n          unit: 'o',\n          long: 'octets'\n        }, {\n          from: 1e3,\n          to: 1e6,\n          unit: 'ko',\n          long: 'kilooctets'\n        }, {\n          from: 1e6,\n          to: 1e9,\n          unit: 'Mo',\n          long: 'megaoctets'\n        }, {\n          from: 1e9,\n          to: 1e12,\n          unit: 'Go',\n          long: 'gigaoctets'\n        }, {\n          from: 1e12,\n          to: 1e15,\n          unit: 'To',\n          long: 'teraoctets'\n        }, {\n          from: 1e15,\n          to: 1e18,\n          unit: 'Po',\n          long: 'petaoctets'\n        }, {\n          from: 1e18,\n          to: 1e21,\n          unit: 'Eo',\n          long: 'exaoctets'\n        }, {\n          from: 1e21,\n          to: 1e24,\n          unit: 'Zo',\n          long: 'zettaoctets'\n        }, {\n          from: 1e24,\n          to: 1e27,\n          unit: 'Yo',\n          long: 'yottaoctets'\n        }],\n        iec: [{\n          from: 0,\n          to: Math.pow(1024, 1),\n          unit: 'B',\n          long: 'bytes'\n        }, {\n          from: Math.pow(1024, 1),\n          to: Math.pow(1024, 2),\n          unit: 'KiB',\n          long: 'kibibytes'\n        }, {\n          from: Math.pow(1024, 2),\n          to: Math.pow(1024, 3),\n          unit: 'MiB',\n          long: 'mebibytes'\n        }, {\n          from: Math.pow(1024, 3),\n          to: Math.pow(1024, 4),\n          unit: 'GiB',\n          long: 'gibibytes'\n        }, {\n          from: Math.pow(1024, 4),\n          to: Math.pow(1024, 5),\n          unit: 'TiB',\n          long: 'tebibytes'\n        }, {\n          from: Math.pow(1024, 5),\n          to: Math.pow(1024, 6),\n          unit: 'PiB',\n          long: 'pebibytes'\n        }, {\n          from: Math.pow(1024, 6),\n          to: Math.pow(1024, 7),\n          unit: 'EiB',\n          long: 'exbibytes'\n        }, {\n          from: Math.pow(1024, 7),\n          to: Math.pow(1024, 8),\n          unit: 'ZiB',\n          long: 'zebibytes'\n        }, {\n          from: Math.pow(1024, 8),\n          to: Math.pow(1024, 9),\n          unit: 'YiB',\n          long: 'yobibytes'\n        }],\n        iec_octet: [{\n          from: 0,\n          to: Math.pow(1024, 1),\n          unit: 'o',\n          long: 'octets'\n        }, {\n          from: Math.pow(1024, 1),\n          to: Math.pow(1024, 2),\n          unit: 'Kio',\n          long: 'kibioctets'\n        }, {\n          from: Math.pow(1024, 2),\n          to: Math.pow(1024, 3),\n          unit: 'Mio',\n          long: 'mebioctets'\n        }, {\n          from: Math.pow(1024, 3),\n          to: Math.pow(1024, 4),\n          unit: 'Gio',\n          long: 'gibioctets'\n        }, {\n          from: Math.pow(1024, 4),\n          to: Math.pow(1024, 5),\n          unit: 'Tio',\n          long: 'tebioctets'\n        }, {\n          from: Math.pow(1024, 5),\n          to: Math.pow(1024, 6),\n          unit: 'Pio',\n          long: 'pebioctets'\n        }, {\n          from: Math.pow(1024, 6),\n          to: Math.pow(1024, 7),\n          unit: 'Eio',\n          long: 'exbioctets'\n        }, {\n          from: Math.pow(1024, 7),\n          to: Math.pow(1024, 8),\n          unit: 'Zio',\n          long: 'zebioctets'\n        }, {\n          from: Math.pow(1024, 8),\n          to: Math.pow(1024, 9),\n          unit: 'Yio',\n          long: 'yobioctets'\n        }]\n      };\n      Object.assign(tables, options.customUnits);\n      const prefix = bytes < 0 ? '-' : '';\n      bytes = Math.abs(bytes);\n      const table = tables[options.units];\n\n      if (table) {\n        const units = table.find(u => bytes >= u.from && bytes < u.to);\n\n        if (units) {\n          const value = units.from === 0 ? prefix + bytes : prefix + (bytes / units.from).toFixed(options.precision);\n          this.value = value;\n          this.unit = units.unit;\n          this.long = units.long;\n        } else {\n          this.value = prefix + bytes;\n          this.unit = '';\n          this.long = '';\n        }\n      } else {\n        throw new Error(`Invalid units specified: ${options.units}`);\n      }\n    }\n\n    toString() {\n      const options = _options.get(this);\n\n      return options.toStringFn ? options.toStringFn.bind(this)() : `${this.value} ${this.unit}`;\n    }\n\n  }\n  /**\n   * Returns an object with the spec `{ value: string, unit: string, long: string }`. The returned object defines a `toString` method meaning it can be used in any string context.\n   * @param {number} - The bytes value to convert.\n   * @param [options] {object} - Optional config.\n   * @param [options.precision] {number} - Number of decimal places. Defaults to `1`.\n   * @param [options.units] {string} - Specify `'metric'`, `'iec'`, `'metric_octet'`, `'iec_octet'` or the name of a property from the custom units table in `options.customUnits`. Defaults to `metric`.\n   * @param [options.customUnits] {object} - An object containing one or more custom unit lookup tables.\n   * @param [options.toStringFn] {function} - A `toString` function to override the default.\n   * @returns {object}\n   * @alias module:byte-size\n   */\n\n\n  function byteSize(bytes, options) {\n    return new ByteSize(bytes, options);\n  }\n  /**\n   * Set the default `byteSize` options for the duration of the process.\n   * @param options {object} - A `byteSize` options object.\n   */\n\n\n  byteSize.defaultOptions = function (options) {\n    defaultOptions = options;\n  };\n\n  return byteSize;\n});","map":{"version":3,"sources":["/Users/johndoe/Nebe-data-vistualization/node_modules/npm/node_modules/byte-size/dist/index.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","byteSize","defaultOptions","_options","WeakMap","ByteSize","constructor","bytes","options","Object","assign","units","precision","set","tables","metric","from","to","unit","long","metric_octet","iec","Math","pow","iec_octet","customUnits","prefix","abs","table","find","u","value","toFixed","Error","toString","get","toStringFn","bind"],"mappings":"AAAC,WAAUA,MAAV,EAAkBC,OAAlB,EAA2B;AAC1B,SAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOC,MAAP,KAAkB,WAAjD,GAA+DA,MAAM,CAACD,OAAP,GAAiBD,OAAO,EAAvF,GACA,OAAOG,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAAvC,GAA6CD,MAAM,CAACH,OAAD,CAAnD,IACCD,MAAM,GAAG,OAAOM,UAAP,KAAsB,WAAtB,GAAoCA,UAApC,GAAiDN,MAAM,IAAIO,IAApE,EAA0EP,MAAM,CAACQ,QAAP,GAAkBP,OAAO,EADpG,CADA;AAGD,CAJA,EAIC,IAJD,EAIQ,YAAY;AAAE;AAErB;AACF;AACA;;AAEE,MAAIQ,cAAc,GAAG,EAArB;;AACA,QAAMC,QAAQ,GAAG,IAAIC,OAAJ,EAAjB;;AAEA,QAAMC,QAAN,CAAe;AACbC,IAAAA,WAAW,CAAEC,KAAF,EAASC,OAAT,EAAkB;AAC3BA,MAAAA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc;AACtBC,QAAAA,KAAK,EAAE,QADe;AAEtBC,QAAAA,SAAS,EAAE;AAFW,OAAd,EAGPV,cAHO,EAGSM,OAHT,CAAV;;AAIAL,MAAAA,QAAQ,CAACU,GAAT,CAAa,IAAb,EAAmBL,OAAnB;;AAEA,YAAMM,MAAM,GAAG;AACbC,QAAAA,MAAM,EAAE,CACN;AAAEC,UAAAA,IAAI,EAAE,CAAR;AAAcC,UAAAA,EAAE,EAAE,GAAlB;AAAwBC,UAAAA,IAAI,EAAE,GAA9B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SADM,EAEN;AAAEH,UAAAA,IAAI,EAAE,GAAR;AAAcC,UAAAA,EAAE,EAAE,GAAlB;AAAwBC,UAAAA,IAAI,EAAE,IAA9B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SAFM,EAGN;AAAEH,UAAAA,IAAI,EAAE,GAAR;AAAcC,UAAAA,EAAE,EAAE,GAAlB;AAAwBC,UAAAA,IAAI,EAAE,IAA9B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SAHM,EAIN;AAAEH,UAAAA,IAAI,EAAE,GAAR;AAAcC,UAAAA,EAAE,EAAE,IAAlB;AAAwBC,UAAAA,IAAI,EAAE,IAA9B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SAJM,EAKN;AAAEH,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,EAAE,EAAE,IAAlB;AAAwBC,UAAAA,IAAI,EAAE,IAA9B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SALM,EAMN;AAAEH,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,EAAE,EAAE,IAAlB;AAAwBC,UAAAA,IAAI,EAAE,IAA9B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SANM,EAON;AAAEH,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,EAAE,EAAE,IAAlB;AAAwBC,UAAAA,IAAI,EAAE,IAA9B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SAPM,EAQN;AAAEH,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,EAAE,EAAE,IAAlB;AAAwBC,UAAAA,IAAI,EAAE,IAA9B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SARM,EASN;AAAEH,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,EAAE,EAAE,IAAlB;AAAwBC,UAAAA,IAAI,EAAE,IAA9B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SATM,CADK;AAYbC,QAAAA,YAAY,EAAE,CACZ;AAAEJ,UAAAA,IAAI,EAAE,CAAR;AAAcC,UAAAA,EAAE,EAAE,GAAlB;AAAwBC,UAAAA,IAAI,EAAE,GAA9B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SADY,EAEZ;AAAEH,UAAAA,IAAI,EAAE,GAAR;AAAcC,UAAAA,EAAE,EAAE,GAAlB;AAAwBC,UAAAA,IAAI,EAAE,IAA9B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SAFY,EAGZ;AAAEH,UAAAA,IAAI,EAAE,GAAR;AAAcC,UAAAA,EAAE,EAAE,GAAlB;AAAwBC,UAAAA,IAAI,EAAE,IAA9B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SAHY,EAIZ;AAAEH,UAAAA,IAAI,EAAE,GAAR;AAAcC,UAAAA,EAAE,EAAE,IAAlB;AAAwBC,UAAAA,IAAI,EAAE,IAA9B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SAJY,EAKZ;AAAEH,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,EAAE,EAAE,IAAlB;AAAwBC,UAAAA,IAAI,EAAE,IAA9B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SALY,EAMZ;AAAEH,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,EAAE,EAAE,IAAlB;AAAwBC,UAAAA,IAAI,EAAE,IAA9B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SANY,EAOZ;AAAEH,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,EAAE,EAAE,IAAlB;AAAwBC,UAAAA,IAAI,EAAE,IAA9B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SAPY,EAQZ;AAAEH,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,EAAE,EAAE,IAAlB;AAAwBC,UAAAA,IAAI,EAAE,IAA9B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SARY,EASZ;AAAEH,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,EAAE,EAAE,IAAlB;AAAwBC,UAAAA,IAAI,EAAE,IAA9B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SATY,CAZD;AAuBbE,QAAAA,GAAG,EAAE,CACH;AAAEL,UAAAA,IAAI,EAAE,CAAR;AAA2BC,UAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA/B;AAAkDL,UAAAA,IAAI,EAAE,GAAxD;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SADG,EAEH;AAAEH,UAAAA,IAAI,EAAEM,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAR;AAA2BN,UAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA/B;AAAkDL,UAAAA,IAAI,EAAE,KAAxD;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SAFG,EAGH;AAAEH,UAAAA,IAAI,EAAEM,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAR;AAA2BN,UAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA/B;AAAkDL,UAAAA,IAAI,EAAE,KAAxD;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SAHG,EAIH;AAAEH,UAAAA,IAAI,EAAEM,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAR;AAA2BN,UAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA/B;AAAkDL,UAAAA,IAAI,EAAE,KAAxD;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SAJG,EAKH;AAAEH,UAAAA,IAAI,EAAEM,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAR;AAA2BN,UAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA/B;AAAkDL,UAAAA,IAAI,EAAE,KAAxD;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SALG,EAMH;AAAEH,UAAAA,IAAI,EAAEM,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAR;AAA2BN,UAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA/B;AAAkDL,UAAAA,IAAI,EAAE,KAAxD;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SANG,EAOH;AAAEH,UAAAA,IAAI,EAAEM,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAR;AAA2BN,UAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA/B;AAAkDL,UAAAA,IAAI,EAAE,KAAxD;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SAPG,EAQH;AAAEH,UAAAA,IAAI,EAAEM,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAR;AAA2BN,UAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA/B;AAAkDL,UAAAA,IAAI,EAAE,KAAxD;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SARG,EASH;AAAEH,UAAAA,IAAI,EAAEM,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAR;AAA2BN,UAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA/B;AAAkDL,UAAAA,IAAI,EAAE,KAAxD;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SATG,CAvBQ;AAkCbK,QAAAA,SAAS,EAAE,CACT;AAAER,UAAAA,IAAI,EAAE,CAAR;AAA2BC,UAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA/B;AAAkDL,UAAAA,IAAI,EAAE,GAAxD;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SADS,EAET;AAAEH,UAAAA,IAAI,EAAEM,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAR;AAA2BN,UAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA/B;AAAkDL,UAAAA,IAAI,EAAE,KAAxD;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SAFS,EAGT;AAAEH,UAAAA,IAAI,EAAEM,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAR;AAA2BN,UAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA/B;AAAkDL,UAAAA,IAAI,EAAE,KAAxD;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SAHS,EAIT;AAAEH,UAAAA,IAAI,EAAEM,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAR;AAA2BN,UAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA/B;AAAkDL,UAAAA,IAAI,EAAE,KAAxD;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SAJS,EAKT;AAAEH,UAAAA,IAAI,EAAEM,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAR;AAA2BN,UAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA/B;AAAkDL,UAAAA,IAAI,EAAE,KAAxD;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SALS,EAMT;AAAEH,UAAAA,IAAI,EAAEM,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAR;AAA2BN,UAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA/B;AAAkDL,UAAAA,IAAI,EAAE,KAAxD;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SANS,EAOT;AAAEH,UAAAA,IAAI,EAAEM,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAR;AAA2BN,UAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA/B;AAAkDL,UAAAA,IAAI,EAAE,KAAxD;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SAPS,EAQT;AAAEH,UAAAA,IAAI,EAAEM,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAR;AAA2BN,UAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA/B;AAAkDL,UAAAA,IAAI,EAAE,KAAxD;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SARS,EAST;AAAEH,UAAAA,IAAI,EAAEM,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAR;AAA2BN,UAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAA/B;AAAkDL,UAAAA,IAAI,EAAE,KAAxD;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SATS;AAlCE,OAAf;AA8CAV,MAAAA,MAAM,CAACC,MAAP,CAAcI,MAAd,EAAsBN,OAAO,CAACiB,WAA9B;AAEA,YAAMC,MAAM,GAAGnB,KAAK,GAAG,CAAR,GAAY,GAAZ,GAAkB,EAAjC;AACAA,MAAAA,KAAK,GAAGe,IAAI,CAACK,GAAL,CAASpB,KAAT,CAAR;AACA,YAAMqB,KAAK,GAAGd,MAAM,CAACN,OAAO,CAACG,KAAT,CAApB;;AACA,UAAIiB,KAAJ,EAAW;AACT,cAAMjB,KAAK,GAAGiB,KAAK,CAACC,IAAN,CAAWC,CAAC,IAAIvB,KAAK,IAAIuB,CAAC,CAACd,IAAX,IAAmBT,KAAK,GAAGuB,CAAC,CAACb,EAA7C,CAAd;;AACA,YAAIN,KAAJ,EAAW;AACT,gBAAMoB,KAAK,GAAGpB,KAAK,CAACK,IAAN,KAAe,CAAf,GACVU,MAAM,GAAGnB,KADC,GAEVmB,MAAM,GAAG,CAACnB,KAAK,GAAGI,KAAK,CAACK,IAAf,EAAqBgB,OAArB,CAA6BxB,OAAO,CAACI,SAArC,CAFb;AAGA,eAAKmB,KAAL,GAAaA,KAAb;AACA,eAAKb,IAAL,GAAYP,KAAK,CAACO,IAAlB;AACA,eAAKC,IAAL,GAAYR,KAAK,CAACQ,IAAlB;AACD,SAPD,MAOO;AACL,eAAKY,KAAL,GAAaL,MAAM,GAAGnB,KAAtB;AACA,eAAKW,IAAL,GAAY,EAAZ;AACA,eAAKC,IAAL,GAAY,EAAZ;AACD;AACF,OAdD,MAcO;AACL,cAAM,IAAIc,KAAJ,CAAW,4BAA2BzB,OAAO,CAACG,KAAM,EAApD,CAAN;AACD;AACF;;AAEDuB,IAAAA,QAAQ,GAAI;AACV,YAAM1B,OAAO,GAAGL,QAAQ,CAACgC,GAAT,CAAa,IAAb,CAAhB;;AACA,aAAO3B,OAAO,CAAC4B,UAAR,GAAqB5B,OAAO,CAAC4B,UAAR,CAAmBC,IAAnB,CAAwB,IAAxB,GAArB,GAAwD,GAAE,KAAKN,KAAM,IAAG,KAAKb,IAAK,EAAzF;AACD;;AAjFY;AAoFf;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,WAASjB,QAAT,CAAmBM,KAAnB,EAA0BC,OAA1B,EAAmC;AACjC,WAAO,IAAIH,QAAJ,CAAaE,KAAb,EAAoBC,OAApB,CAAP;AACD;AAED;AACF;AACA;AACA;;;AACEP,EAAAA,QAAQ,CAACC,cAAT,GAA0B,UAAUM,OAAV,EAAmB;AAC3CN,IAAAA,cAAc,GAAGM,OAAjB;AACD,GAFD;;AAIA,SAAOP,QAAP;AAED,CA1HA,CAAD","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.byteSize = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * @module byte-size\n   */\n\n  let defaultOptions = {};\n  const _options = new WeakMap();\n\n  class ByteSize {\n    constructor (bytes, options) {\n      options = Object.assign({\n        units: 'metric',\n        precision: 1\n      }, defaultOptions, options);\n      _options.set(this, options);\n\n      const tables = {\n        metric: [\n          { from: 0   , to: 1e3 , unit: 'B' , long: 'bytes' },\n          { from: 1e3 , to: 1e6 , unit: 'kB', long: 'kilobytes' },\n          { from: 1e6 , to: 1e9 , unit: 'MB', long: 'megabytes' },\n          { from: 1e9 , to: 1e12, unit: 'GB', long: 'gigabytes' },\n          { from: 1e12, to: 1e15, unit: 'TB', long: 'terabytes' },\n          { from: 1e15, to: 1e18, unit: 'PB', long: 'petabytes' },\n          { from: 1e18, to: 1e21, unit: 'EB', long: 'exabytes' },\n          { from: 1e21, to: 1e24, unit: 'ZB', long: 'zettabytes' },\n          { from: 1e24, to: 1e27, unit: 'YB', long: 'yottabytes' },\n        ],\n        metric_octet: [\n          { from: 0   , to: 1e3 , unit: 'o' , long: 'octets' },\n          { from: 1e3 , to: 1e6 , unit: 'ko', long: 'kilooctets' },\n          { from: 1e6 , to: 1e9 , unit: 'Mo', long: 'megaoctets' },\n          { from: 1e9 , to: 1e12, unit: 'Go', long: 'gigaoctets' },\n          { from: 1e12, to: 1e15, unit: 'To', long: 'teraoctets' },\n          { from: 1e15, to: 1e18, unit: 'Po', long: 'petaoctets' },\n          { from: 1e18, to: 1e21, unit: 'Eo', long: 'exaoctets' },\n          { from: 1e21, to: 1e24, unit: 'Zo', long: 'zettaoctets' },\n          { from: 1e24, to: 1e27, unit: 'Yo', long: 'yottaoctets' },\n        ],\n        iec: [\n          { from: 0                , to: Math.pow(1024, 1), unit: 'B'  , long: 'bytes' },\n          { from: Math.pow(1024, 1), to: Math.pow(1024, 2), unit: 'KiB', long: 'kibibytes' },\n          { from: Math.pow(1024, 2), to: Math.pow(1024, 3), unit: 'MiB', long: 'mebibytes' },\n          { from: Math.pow(1024, 3), to: Math.pow(1024, 4), unit: 'GiB', long: 'gibibytes' },\n          { from: Math.pow(1024, 4), to: Math.pow(1024, 5), unit: 'TiB', long: 'tebibytes' },\n          { from: Math.pow(1024, 5), to: Math.pow(1024, 6), unit: 'PiB', long: 'pebibytes' },\n          { from: Math.pow(1024, 6), to: Math.pow(1024, 7), unit: 'EiB', long: 'exbibytes' },\n          { from: Math.pow(1024, 7), to: Math.pow(1024, 8), unit: 'ZiB', long: 'zebibytes' },\n          { from: Math.pow(1024, 8), to: Math.pow(1024, 9), unit: 'YiB', long: 'yobibytes' },\n        ],\n        iec_octet: [\n          { from: 0                , to: Math.pow(1024, 1), unit: 'o'  , long: 'octets' },\n          { from: Math.pow(1024, 1), to: Math.pow(1024, 2), unit: 'Kio', long: 'kibioctets' },\n          { from: Math.pow(1024, 2), to: Math.pow(1024, 3), unit: 'Mio', long: 'mebioctets' },\n          { from: Math.pow(1024, 3), to: Math.pow(1024, 4), unit: 'Gio', long: 'gibioctets' },\n          { from: Math.pow(1024, 4), to: Math.pow(1024, 5), unit: 'Tio', long: 'tebioctets' },\n          { from: Math.pow(1024, 5), to: Math.pow(1024, 6), unit: 'Pio', long: 'pebioctets' },\n          { from: Math.pow(1024, 6), to: Math.pow(1024, 7), unit: 'Eio', long: 'exbioctets' },\n          { from: Math.pow(1024, 7), to: Math.pow(1024, 8), unit: 'Zio', long: 'zebioctets' },\n          { from: Math.pow(1024, 8), to: Math.pow(1024, 9), unit: 'Yio', long: 'yobioctets' },\n        ],\n      };\n      Object.assign(tables, options.customUnits);\n\n      const prefix = bytes < 0 ? '-' : '';\n      bytes = Math.abs(bytes);\n      const table = tables[options.units];\n      if (table) {\n        const units = table.find(u => bytes >= u.from && bytes < u.to);\n        if (units) {\n          const value = units.from === 0\n            ? prefix + bytes\n            : prefix + (bytes / units.from).toFixed(options.precision);\n          this.value = value;\n          this.unit = units.unit;\n          this.long = units.long;\n        } else {\n          this.value = prefix + bytes;\n          this.unit = '';\n          this.long = '';\n        }\n      } else {\n        throw new Error(`Invalid units specified: ${options.units}`)\n      }\n    }\n\n    toString () {\n      const options = _options.get(this);\n      return options.toStringFn ? options.toStringFn.bind(this)() : `${this.value} ${this.unit}`\n    }\n  }\n\n  /**\n   * Returns an object with the spec `{ value: string, unit: string, long: string }`. The returned object defines a `toString` method meaning it can be used in any string context.\n   * @param {number} - The bytes value to convert.\n   * @param [options] {object} - Optional config.\n   * @param [options.precision] {number} - Number of decimal places. Defaults to `1`.\n   * @param [options.units] {string} - Specify `'metric'`, `'iec'`, `'metric_octet'`, `'iec_octet'` or the name of a property from the custom units table in `options.customUnits`. Defaults to `metric`.\n   * @param [options.customUnits] {object} - An object containing one or more custom unit lookup tables.\n   * @param [options.toStringFn] {function} - A `toString` function to override the default.\n   * @returns {object}\n   * @alias module:byte-size\n   */\n  function byteSize (bytes, options) {\n    return new ByteSize(bytes, options)\n  }\n\n  /**\n   * Set the default `byteSize` options for the duration of the process.\n   * @param options {object} - A `byteSize` options object.\n   */\n  byteSize.defaultOptions = function (options) {\n    defaultOptions = options;\n  };\n\n  return byteSize;\n\n})));\n"]},"metadata":{},"sourceType":"script"}