{"ast":null,"code":"import React,{useContext}from'react';import{ListGroup}from'react-bootstrap';import{NavLink}from'react-router-dom';import NavIcon from'../NavIcon';import NavBadge from'../NavBadge';import{ConfigContext}from'../../../../../contexts/ConfigContext';import*as actionType from'../../../../../store/actions';import useWindowSize from'../../../../../hooks/useWindowSize';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NavItem=function NavItem(_ref){var layout=_ref.layout,item=_ref.item;var windowSize=useWindowSize();var configContext=useContext(ConfigContext);var dispatch=configContext.dispatch;var itemTitle=item.title;if(item.icon){itemTitle=/*#__PURE__*/_jsx(\"span\",{className:\"pcoded-mtext\",children:item.title});}var itemTarget='';if(item.target){itemTarget='_blank';}var subContent;if(item.external){subContent=/*#__PURE__*/_jsxs(\"a\",{href:item.url,target:\"_blank\",rel:\"noopener noreferrer\",children:[/*#__PURE__*/_jsx(NavIcon,{items:item}),itemTitle,/*#__PURE__*/_jsx(NavBadge,{items:item})]});}else{subContent=/*#__PURE__*/_jsxs(NavLink,{to:item.url,className:\"nav-link\",exact:true,target:itemTarget,children:[/*#__PURE__*/_jsx(NavIcon,{items:item}),itemTitle,/*#__PURE__*/_jsx(NavBadge,{items:item})]});}var mainContent='';if(layout==='horizontal'){mainContent=/*#__PURE__*/_jsx(ListGroup.Item,{as:\"li\",bsPrefix:\" \",onClick:function onClick(){return dispatch({type:actionType.NAV_CONTENT_LEAVE});},children:subContent});}else{if(windowSize.width<992){mainContent=/*#__PURE__*/_jsx(ListGroup.Item,{as:\"li\",bsPrefix:\" \",className:item.classes,onClick:function onClick(){return dispatch({type:actionType.COLLAPSE_MENU});},children:subContent});}else{mainContent=/*#__PURE__*/_jsx(ListGroup.Item,{as:\"li\",bsPrefix:\" \",className:item.classes,children:subContent});}}return/*#__PURE__*/_jsx(React.Fragment,{children:mainContent});};export default NavItem;","map":{"version":3,"sources":["/Users/johndoe/Nebe-data-vistualization/src/layouts/AdminLayout/Navigation/NavContent/NavItem/index.js"],"names":["React","useContext","ListGroup","NavLink","NavIcon","NavBadge","ConfigContext","actionType","useWindowSize","NavItem","layout","item","windowSize","configContext","dispatch","itemTitle","title","icon","itemTarget","target","subContent","external","url","mainContent","type","NAV_CONTENT_LEAVE","width","classes","COLLAPSE_MENU"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\n\nimport NavIcon from '../NavIcon';\nimport NavBadge from '../NavBadge';\n\nimport { ConfigContext } from '../../../../../contexts/ConfigContext';\nimport * as actionType from '../../../../../store/actions';\nimport useWindowSize from '../../../../../hooks/useWindowSize';\n\nconst NavItem = ({ layout, item }) => {\n    const windowSize = useWindowSize();\n    const configContext = useContext(ConfigContext);\n    const { dispatch } = configContext;\n\n    let itemTitle = item.title;\n    if (item.icon) {\n        itemTitle = <span className=\"pcoded-mtext\">{item.title}</span>;\n    }\n\n    let itemTarget = '';\n    if (item.target) {\n        itemTarget = '_blank';\n    }\n\n    let subContent;\n    if (item.external) {\n        subContent = (\n            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <NavIcon items={item} />\n                {itemTitle}\n                <NavBadge items={item} />\n            </a>\n        );\n    } else {\n        subContent = (\n            <NavLink to={item.url} className=\"nav-link\" exact={true} target={itemTarget}>\n                <NavIcon items={item} />\n                {itemTitle}\n                <NavBadge items={item} />\n            </NavLink>\n        );\n    }\n    let mainContent = '';\n    if (layout === 'horizontal') {\n        mainContent = (\n            <ListGroup.Item as=\"li\" bsPrefix=\" \" onClick={() => dispatch({ type: actionType.NAV_CONTENT_LEAVE })}>\n                {subContent}\n            </ListGroup.Item>\n        );\n    } else {\n        if (windowSize.width < 992) {\n            mainContent = (\n                <ListGroup.Item as=\"li\" bsPrefix=\" \" className={item.classes} onClick={() => dispatch({ type: actionType.COLLAPSE_MENU })}>\n                    {subContent}\n                </ListGroup.Item>\n            );\n        } else {\n            mainContent = (\n                <ListGroup.Item as=\"li\" bsPrefix=\" \" className={item.classes}>\n                    {subContent}\n                </ListGroup.Item>\n            );\n        }\n    }\n\n    return <React.Fragment>{mainContent}</React.Fragment>;\n};\n\nexport default NavItem;\n"]},"metadata":{},"sourceType":"module"}