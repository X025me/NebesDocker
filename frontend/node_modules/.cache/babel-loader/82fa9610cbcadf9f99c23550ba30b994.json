{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/Nebe-data-vistualization/src/layouts/AdminLayout/NavBar/NavRight/ChatList/Friends/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport friend from './friends';\nimport Friend from './Friend';\nimport Chat from './Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Friends = ({\n  listOpen\n}) => {\n  _s();\n\n  const [chatOpen, setChatOpen] = useState(listOpen);\n  const [user, setUser] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  const requests = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/data/requests/request_list_aproved/');\n      const res = await response.json();\n      console.log('data', res.results);\n      setUsers(res.results);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    requests();\n    setChatOpen(false);\n  }, [listOpen]);\n  const friendList = users.map(f => {\n    return /*#__PURE__*/_jsxDEV(Friend, {\n      data: f,\n      activeId: users.id,\n      clicked: () => {\n        setChatOpen(true);\n        setUser(f);\n      }\n    }, f.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: users.map((item, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: item.status ? /*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            padding: 10,\n            margin: 10,\n            backgroundColor: 'green',\n            borderRadius: 10\n          },\n          children: item.request_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 34\n        }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            padding: 10,\n            margin: 10,\n            backgroundColor: 'red'\n          },\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 149\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Friends, \"XMEPicPFHqOy/y5KUGy0LO8WH6I=\");\n\n_c = Friends;\nexport default Friends;\n\nvar _c;\n\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"sources":["/Users/johndoe/Nebe-data-vistualization/src/layouts/AdminLayout/NavBar/NavRight/ChatList/Friends/index.js"],"names":["React","useState","useEffect","friend","Friend","Chat","Friends","listOpen","chatOpen","setChatOpen","user","setUser","users","setUsers","requests","response","fetch","res","json","console","log","results","e","friendList","map","f","id","display","flexDirection","item","index","status","padding","margin","backgroundColor","borderRadius","request_description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC9B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACM,QAAD,CAAxC;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMa,QAAQ,GAAG,YAAW;AACxB,QAAG;AACC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2DAAD,CAA5B;AACA,YAAMC,GAAG,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,GAAG,CAACI,OAAxB;AACAR,MAAAA,QAAQ,CAACI,GAAG,CAACI,OAAL,CAAR;AAEH,KAND,CAME,OAAMC,CAAN,EAAQ;AACNH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACH;AACJ,GAVD;;AAYApB,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,QAAQ;AACRL,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAHQ,EAGN,CAACF,QAAD,CAHM,CAAT;AAKA,QAAMgB,UAAU,GAAGX,KAAK,CAACY,GAAN,CAAWC,CAAD,IAAO;AAChC,wBACI,QAAC,MAAD;AAEI,MAAA,IAAI,EAAEA,CAFV;AAGI,MAAA,QAAQ,EAAEb,KAAK,CAACc,EAHpB;AAII,MAAA,OAAO,EAAE,MAAM;AACXjB,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,QAAAA,OAAO,CAACc,CAAD,CAAP;AACH;AAPL,OACSA,CAAC,CAACC,EADX;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH,GAZkB,CAAnB;AAcA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,aAAa,EAAE;AAAjC,OAAZ;AAAA,gBACChB,KAAK,CAACY,GAAN,CAAU,CAACK,IAAD,EAAOC,KAAP,kBACR;AAAA,kBAAGD,IAAI,CAACE,MAAL,gBAAe;AAAG,UAAA,KAAK,EAAE;AAACC,YAAAA,OAAO,EAAE,EAAV;AAAcC,YAAAA,MAAM,EAAE,EAAtB;AAA0BC,YAAAA,eAAe,EAAE,OAA3C;AAAoDC,YAAAA,YAAY,EAAE;AAAlE,WAAV;AAAA,oBAAkFN,IAAI,CAACO;AAAvF;AAAA;AAAA;AAAA;AAAA,gBAAf,gBAAkI;AAAG,UAAA,KAAK,EAAE;AAACJ,YAAAA,OAAO,EAAE,EAAV;AAAaC,YAAAA,MAAM,EAAE,EAArB;AAAyBC,YAAAA,eAAe,EAAE;AAA1C,WAAV;AAAA,oBAA6DL,IAAI,CAACH;AAAlE;AAAA;AAAA;AAAA;AAAA;AAArI,uBADF;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA7CD;;GAAMpB,O;;KAAAA,O;AA+CN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport friend from './friends';\nimport Friend from './Friend';\nimport Chat from './Chat';\n\nconst Friends = ({ listOpen }) => {\n    const [chatOpen, setChatOpen] = useState(listOpen);\n    const [user, setUser] = useState([]);\n    const [users, setUsers] = useState([]);\n\n    const requests = async () =>{\n        try{\n            const response = await fetch('http://localhost:8000/data/requests/request_list_aproved/')\n            const res = await response.json()\n            console.log('data', res.results)\n            setUsers(res.results)\n\n        } catch(e){\n            console.log(e)\n        }\n    }\n\n    useEffect(() => {\n        requests()\n        setChatOpen(false);\n    }, [listOpen]);\n\n    const friendList = users.map((f) => {\n        return (\n            <Friend\n                key={f.id}\n                data={f}\n                activeId={users.id}\n                clicked={() => {\n                    setChatOpen(true);\n                    setUser(f);\n                }}\n            />\n        );\n    });\n\n    return (\n        <React.Fragment>\n            <div style={{display: 'flex', flexDirection: 'column'}}>\n            {users.map((item, index) =>(\n               <>{item.status ?  <a style={{padding: 10, margin: 10, backgroundColor: 'green', borderRadius: 10}}>{item.request_description}</a> :  <a style={{padding: 10,margin: 10, backgroundColor: 'red'}}>{item.id}</a>}</>\n            ))}\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default Friends;\n"]},"metadata":{},"sourceType":"module"}