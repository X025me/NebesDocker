{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/Nebe-data-vistualization/src/views/charts/nvd3-chart/chart/LineChart.js\";\nimport React from 'react';\nimport NVD3Chart from 'react-nvd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getDatum() {\n  var sin = [],\n      sin2 = [],\n      cos = [];\n\n  for (var i = 0; i < 100; i++) {\n    sin.push({\n      x: i,\n      y: Math.sin(i / 10)\n    });\n    sin2.push({\n      x: i,\n      y: Math.sin(i / 10) * 0.25 + 0.5\n    });\n    cos.push({\n      x: i,\n      y: 0.5 * Math.cos(i / 10)\n    });\n  }\n\n  return [{\n    values: sin,\n    key: 'Sine Wave',\n    color: '#A389D4'\n  }, {\n    values: cos,\n    key: 'Cosine Wave',\n    color: '#04a9f5'\n  }, {\n    values: sin2,\n    key: 'Another sine wave',\n    color: '#1de9b6',\n    area: true\n  }];\n}\n\nconst LineChart = () => {\n  const data = getDatum();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/React.createElement(NVD3Chart, {\n      xAxis: {\n        tickFormat: function (d) {\n          return d;\n        },\n        axisLabel: 'Time (ms)'\n      },\n      yAxis: {\n        axisLabel: 'Voltage (v)',\n        tickFormat: function (d) {\n          return parseFloat(d).toFixed(2);\n        }\n      },\n      type: 'lineChart',\n      datum: data,\n      x: 'x',\n      y: 'y',\n      height: 300,\n      renderEnd: function () {\n        console.log('renderEnd');\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/johndoe/Nebe-data-vistualization/src/views/charts/nvd3-chart/chart/LineChart.js"],"names":["React","NVD3Chart","getDatum","sin","sin2","cos","i","push","x","y","Math","values","key","color","area","LineChart","data","createElement","xAxis","tickFormat","d","axisLabel","yAxis","parseFloat","toFixed","type","datum","height","renderEnd","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,QAAT,GAAoB;AAChB,MAAIC,GAAG,GAAG,EAAV;AAAA,MACIC,IAAI,GAAG,EADX;AAAA,MAEIC,GAAG,GAAG,EAFV;;AAGA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1BH,IAAAA,GAAG,CAACI,IAAJ,CAAS;AACLC,MAAAA,CAAC,EAAEF,CADE;AAELG,MAAAA,CAAC,EAAEC,IAAI,CAACP,GAAL,CAASG,CAAC,GAAG,EAAb;AAFE,KAAT;AAIAF,IAAAA,IAAI,CAACG,IAAL,CAAU;AACNC,MAAAA,CAAC,EAAEF,CADG;AAENG,MAAAA,CAAC,EAAEC,IAAI,CAACP,GAAL,CAASG,CAAC,GAAG,EAAb,IAAmB,IAAnB,GAA0B;AAFvB,KAAV;AAIAD,IAAAA,GAAG,CAACE,IAAJ,CAAS;AACLC,MAAAA,CAAC,EAAEF,CADE;AAELG,MAAAA,CAAC,EAAE,MAAMC,IAAI,CAACL,GAAL,CAASC,CAAC,GAAG,EAAb;AAFJ,KAAT;AAIH;;AACD,SAAO,CACH;AACIK,IAAAA,MAAM,EAAER,GADZ;AAEIS,IAAAA,GAAG,EAAE,WAFT;AAGIC,IAAAA,KAAK,EAAE;AAHX,GADG,EAMH;AACIF,IAAAA,MAAM,EAAEN,GADZ;AAEIO,IAAAA,GAAG,EAAE,aAFT;AAGIC,IAAAA,KAAK,EAAE;AAHX,GANG,EAWH;AACIF,IAAAA,MAAM,EAAEP,IADZ;AAEIQ,IAAAA,GAAG,EAAE,mBAFT;AAGIC,IAAAA,KAAK,EAAE,SAHX;AAIIC,IAAAA,IAAI,EAAE;AAJV,GAXG,CAAP;AAkBH;;AAED,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAMC,IAAI,GAAGd,QAAQ,EAArB;AACA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACKF,KAAK,CAACiB,aAAN,CAAoBhB,SAApB,EAA+B;AAC5BiB,MAAAA,KAAK,EAAE;AACHC,QAAAA,UAAU,EAAE,UAAUC,CAAV,EAAa;AACrB,iBAAOA,CAAP;AACH,SAHE;AAIHC,QAAAA,SAAS,EAAE;AAJR,OADqB;AAO5BC,MAAAA,KAAK,EAAE;AACHD,QAAAA,SAAS,EAAE,aADR;AAEHF,QAAAA,UAAU,EAAE,UAAUC,CAAV,EAAa;AACrB,iBAAOG,UAAU,CAACH,CAAD,CAAV,CAAcI,OAAd,CAAsB,CAAtB,CAAP;AACH;AAJE,OAPqB;AAa5BC,MAAAA,IAAI,EAAE,WAbsB;AAc5BC,MAAAA,KAAK,EAAEV,IAdqB;AAe5BR,MAAAA,CAAC,EAAE,GAfyB;AAgB5BC,MAAAA,CAAC,EAAE,GAhByB;AAiB5BkB,MAAAA,MAAM,EAAE,GAjBoB;AAkB5BC,MAAAA,SAAS,EAAE,YAAY;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;AApB2B,KAA/B;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA5BD;;KAAMf,S;AA8BN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport NVD3Chart from 'react-nvd3';\n\nfunction getDatum() {\n    var sin = [],\n        sin2 = [],\n        cos = [];\n    for (var i = 0; i < 100; i++) {\n        sin.push({\n            x: i,\n            y: Math.sin(i / 10)\n        });\n        sin2.push({\n            x: i,\n            y: Math.sin(i / 10) * 0.25 + 0.5\n        });\n        cos.push({\n            x: i,\n            y: 0.5 * Math.cos(i / 10)\n        });\n    }\n    return [\n        {\n            values: sin,\n            key: 'Sine Wave',\n            color: '#A389D4'\n        },\n        {\n            values: cos,\n            key: 'Cosine Wave',\n            color: '#04a9f5'\n        },\n        {\n            values: sin2,\n            key: 'Another sine wave',\n            color: '#1de9b6',\n            area: true\n        }\n    ];\n}\n\nconst LineChart = () => {\n    const data = getDatum();\n    return (\n        <React.Fragment>\n            {React.createElement(NVD3Chart, {\n                xAxis: {\n                    tickFormat: function (d) {\n                        return d;\n                    },\n                    axisLabel: 'Time (ms)'\n                },\n                yAxis: {\n                    axisLabel: 'Voltage (v)',\n                    tickFormat: function (d) {\n                        return parseFloat(d).toFixed(2);\n                    }\n                },\n                type: 'lineChart',\n                datum: data,\n                x: 'x',\n                y: 'y',\n                height: 300,\n                renderEnd: function () {\n                    console.log('renderEnd');\n                }\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}