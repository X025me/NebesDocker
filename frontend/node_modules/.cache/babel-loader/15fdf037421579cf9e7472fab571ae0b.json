{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/Nebe-data-vistualization/src/views/home/Home/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Table, Tabs, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TabPane\n} = Tabs;\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Joe Black',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Jim Green',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 32,\n  address: 'London No. 2 Lake Park'\n}];\n\nconst Home = () => {\n  _s();\n\n  const [searchText, setSearchText] = useState();\n  const [searchedColumn, setSearchedColumn] = useState('');\n  var [searchInput, setSearchInput] = useState('');\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters();\n    setSearchText('');\n  };\n\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: node => {\n          searchInput = node;\n        },\n        placeholder: `Search ${dataIndex}`,\n        value: selectedKeys[0],\n        onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n        onPressEnter: () => handleSearch(selectedKeys, confirm, dataIndex),\n        style: {\n          marginBottom: 8,\n          display: 'block'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => handleSearch(selectedKeys, confirm, dataIndex),\n          icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this),\n          size: \"small\",\n          style: {\n            width: 90\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleReset(clearFilters),\n          size: \"small\",\n          style: {\n            width: 90\n          },\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"link\",\n          size: \"small\",\n          onClick: () => {\n            confirm({\n              closeDropdown: false\n            });\n            setSearchText(selectedKeys[0]);\n            setSearchedColumn(dataIndex);\n          },\n          children: \"Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this),\n    filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n      style: {\n        color: filtered ? '#1890ff' : undefined\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }, this),\n    onFilter: (value, record) => record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => searchInput.select(), 100);\n      }\n    },\n    render: text => searchedColumn === dataIndex ? /*#__PURE__*/_jsxDEV(Highlighter, {\n      highlightStyle: {\n        backgroundColor: '#ffc069',\n        padding: 0\n      },\n      searchWords: [searchText],\n      autoEscape: true,\n      textToHighlight: text ? text.toString() : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : text\n  });\n\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    width: '30%',\n    ...getColumnSearchProps('name')\n  }, {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age',\n    width: '20%',\n    ...getColumnSearchProps('age')\n  }, {\n    title: 'Address',\n    dataIndex: 'address',\n    key: 'address',\n    ...getColumnSearchProps('address'),\n    sorter: (a, b) => a.address.length - b.address.length,\n    sortDirections: ['descend', 'ascend']\n  }];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      style: {\n        marginTop: 10\n      },\n      columns: columns,\n      dataSource: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 22\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"6LU4p6JHqiP7utueyK5WxWifBsg=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/johndoe/Nebe-data-vistualization/src/views/home/Home/index.js"],"names":["React","useState","Table","Tabs","Input","Button","Space","Highlighter","SearchOutlined","TabPane","data","key","name","age","address","Home","searchText","setSearchText","searchedColumn","setSearchedColumn","searchInput","setSearchInput","handleSearch","selectedKeys","confirm","dataIndex","handleReset","clearFilters","getColumnSearchProps","filterDropdown","setSelectedKeys","padding","node","e","target","value","marginBottom","display","width","closeDropdown","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","backgroundColor","columns","title","sorter","a","b","length","sortDirections","marginTop"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Table, Tabs, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\n\n\nconst { TabPane } = Tabs;\n\nconst data = [\n    {\n      key: '1',\n      name: 'John Brown',\n      age: 32,\n      address: 'New York No. 1 Lake Park',\n    },\n    {\n      key: '2',\n      name: 'Joe Black',\n      age: 42,\n      address: 'London No. 1 Lake Park',\n    },\n    {\n      key: '3',\n      name: 'Jim Green',\n      age: 32,\n      address: 'Sidney No. 1 Lake Park',\n    },\n    {\n      key: '4',\n      name: 'Jim Red',\n      age: 32,\n      address: 'London No. 2 Lake Park',\n    },\n  ];\n\nconst Home = () => {\n    const [searchText, setSearchText] = useState()\n  const [searchedColumn, setSearchedColumn] = useState('')\n  var [searchInput, setSearchInput] = useState('')\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters();\n    setSearchText('');\n  };\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n          <Button\n            type=\"link\"\n            size=\"small\"\n            onClick={() => {\n              confirm({ closeDropdown: false });\n              setSearchText(selectedKeys[0]);\n              setSearchedColumn(dataIndex);\n\n            }}\n          >\n            Filter\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n        : '',\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => searchInput.select(), 100);\n      }\n    },\n\n    render: text =>\n      searchedColumn === dataIndex ? (\n\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n\n      ) : (\n        text\n      ),\n  }\n  )\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      width: '30%',\n      ...getColumnSearchProps('name'),\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n      width: '20%',\n      ...getColumnSearchProps('age'),\n    },\n    {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n      ...getColumnSearchProps('address'),\n      sorter: (a, b) => a.address.length - b.address.length,\n      sortDirections: ['descend', 'ascend'],\n    },\n  ];\n    return (\n        <React.Fragment>\n                     <Table style={{ marginTop: 10 }} columns={columns} dataSource={data} />\n\n        </React.Fragment>\n    );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}