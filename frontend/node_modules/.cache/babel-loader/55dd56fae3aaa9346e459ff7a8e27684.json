{"ast":null,"code":"const _progress = Symbol('_progress');\n\nconst _onError = Symbol('_onError');\n\nconst procLog = require('proc-log');\n\nmodule.exports = cls => class Tracker extends cls {\n  constructor(options = {}) {\n    super(options);\n    this.log = options.log || procLog;\n    this[_progress] = new Map();\n  }\n\n  addTracker(section, subsection = null, key = null) {\n    // TrackerGroup type object not found\n    if (!this.log.newGroup) return;\n    if (section === null || section === undefined) this[_onError](`Tracker can't be null or undefined`);\n    if (key === null) key = subsection;\n\n    const hasTracker = this[_progress].has(section);\n\n    const hasSubtracker = this[_progress].has(`${section}:${key}`);\n\n    if (hasTracker && subsection === null) // 0. existing tracker, no subsection\n      this[_onError](`Tracker \"${section}\" already exists`);else if (!hasTracker && subsection === null) {\n      // 1. no existing tracker, no subsection\n      // Create a new tracker from this.log\n      // starts progress bar\n      if (this[_progress].size === 0) this.log.enableProgress();\n\n      this[_progress].set(section, this.log.newGroup(section));\n    } else if (!hasTracker && subsection !== null) // 2. no parent tracker and subsection\n      this[_onError](`Parent tracker \"${section}\" does not exist`);else if (!hasTracker || !hasSubtracker) {\n      // 3. existing parent tracker, no subsection tracker\n      // Create a new subtracker in this[_progress] from parent tracker\n      this[_progress].set(`${section}:${key}`, this[_progress].get(section).newGroup(`${section}:${subsection}`));\n    } // 4. existing parent tracker, existing subsection tracker\n    // skip it\n  }\n\n  finishTracker(section, subsection = null, key = null) {\n    // TrackerGroup type object not found\n    if (!this.log.newGroup) return;\n    if (section === null || section === undefined) this[_onError](`Tracker can't be null or undefined`);\n    if (key === null) key = subsection;\n\n    const hasTracker = this[_progress].has(section);\n\n    const hasSubtracker = this[_progress].has(`${section}:${key}`); // 0. parent tracker exists, no subsection\n    // Finish parent tracker and remove from this[_progress]\n\n\n    if (hasTracker && subsection === null) {\n      // check if parent tracker does\n      // not have any remaining children\n      const keys = this[_progress].keys();\n\n      for (const key of keys) {\n        if (key.match(new RegExp(section + ':'))) this.finishTracker(section, key);\n      } // remove parent tracker\n\n\n      this[_progress].get(section).finish();\n\n      this[_progress].delete(section); // remove progress bar if all\n      // trackers are finished\n\n\n      if (this[_progress].size === 0) this.log.disableProgress();\n    } else if (!hasTracker && subsection === null) // 1. no existing parent tracker, no subsection\n      this[_onError](`Tracker \"${section}\" does not exist`);else if (!hasTracker || hasSubtracker) {\n      // 2. subtracker exists\n      // Finish subtracker and remove from this[_progress]\n      this[_progress].get(`${section}:${key}`).finish();\n\n      this[_progress].delete(`${section}:${key}`);\n    } // 3. existing parent tracker, no subsection\n\n  }\n\n  [_onError](msg) {\n    this.log.disableProgress();\n    throw new Error(msg);\n  }\n\n};","map":{"version":3,"sources":["/Users/johndoe/Nebe-data-vistualization/node_modules/npm/node_modules/@npmcli/arborist/lib/tracker.js"],"names":["_progress","Symbol","_onError","procLog","require","module","exports","cls","Tracker","constructor","options","log","Map","addTracker","section","subsection","key","newGroup","undefined","hasTracker","has","hasSubtracker","size","enableProgress","set","get","finishTracker","keys","match","RegExp","finish","delete","disableProgress","msg","Error"],"mappings":"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","sourcesContent":["const _progress = Symbol('_progress')\nconst _onError = Symbol('_onError')\nconst procLog = require('proc-log')\n\nmodule.exports = cls => class Tracker extends cls {\n  constructor (options = {}) {\n    super(options)\n    this.log = options.log || procLog\n    this[_progress] = new Map()\n  }\n\n  addTracker (section, subsection = null, key = null) {\n    // TrackerGroup type object not found\n    if (!this.log.newGroup)\n      return\n\n    if (section === null || section === undefined)\n      this[_onError](`Tracker can't be null or undefined`)\n\n    if (key === null)\n      key = subsection\n\n    const hasTracker = this[_progress].has(section)\n    const hasSubtracker = this[_progress].has(`${section}:${key}`)\n\n    if (hasTracker && subsection === null)\n      // 0. existing tracker, no subsection\n      this[_onError](`Tracker \"${section}\" already exists`)\n\n    else if (!hasTracker && subsection === null) {\n      // 1. no existing tracker, no subsection\n      // Create a new tracker from this.log\n      // starts progress bar\n      if (this[_progress].size === 0)\n        this.log.enableProgress()\n\n      this[_progress].set(section, this.log.newGroup(section))\n    } else if (!hasTracker && subsection !== null)\n      // 2. no parent tracker and subsection\n      this[_onError](`Parent tracker \"${section}\" does not exist`)\n\n    else if (!hasTracker || !hasSubtracker) {\n      // 3. existing parent tracker, no subsection tracker\n      // Create a new subtracker in this[_progress] from parent tracker\n      this[_progress].set(`${section}:${key}`,\n        this[_progress].get(section).newGroup(`${section}:${subsection}`)\n      )\n    }\n    // 4. existing parent tracker, existing subsection tracker\n    // skip it\n  }\n\n  finishTracker (section, subsection = null, key = null) {\n    // TrackerGroup type object not found\n    if (!this.log.newGroup)\n      return\n\n    if (section === null || section === undefined)\n      this[_onError](`Tracker can't be null or undefined`)\n\n    if (key === null)\n      key = subsection\n\n    const hasTracker = this[_progress].has(section)\n    const hasSubtracker = this[_progress].has(`${section}:${key}`)\n\n    // 0. parent tracker exists, no subsection\n    // Finish parent tracker and remove from this[_progress]\n    if (hasTracker && subsection === null) {\n      // check if parent tracker does\n      // not have any remaining children\n      const keys = this[_progress].keys()\n      for (const key of keys) {\n        if (key.match(new RegExp(section + ':')))\n          this.finishTracker(section, key)\n      }\n\n      // remove parent tracker\n      this[_progress].get(section).finish()\n      this[_progress].delete(section)\n\n      // remove progress bar if all\n      // trackers are finished\n      if (this[_progress].size === 0)\n        this.log.disableProgress()\n    } else if (!hasTracker && subsection === null)\n      // 1. no existing parent tracker, no subsection\n      this[_onError](`Tracker \"${section}\" does not exist`)\n\n    else if (!hasTracker || hasSubtracker) {\n      // 2. subtracker exists\n      // Finish subtracker and remove from this[_progress]\n      this[_progress].get(`${section}:${key}`).finish()\n      this[_progress].delete(`${section}:${key}`)\n    }\n    // 3. existing parent tracker, no subsection\n  }\n\n  [_onError] (msg) {\n    this.log.disableProgress()\n    throw new Error(msg)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}