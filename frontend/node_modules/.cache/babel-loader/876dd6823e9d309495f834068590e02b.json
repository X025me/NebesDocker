{"ast":null,"code":"const {\n  promisify\n} = require('util');\n\nconst fs = require('fs');\n\nconst readFile = promisify(fs.readFile);\n\nconst parse = require('json-parse-even-better-errors');\n\nconst rpj = path => readFile(path, 'utf8').then(data => normalize(stripUnderscores(parse(data)))).catch(er => {\n  er.path = path;\n  throw er;\n});\n\nconst normalizePackageBin = require('npm-normalize-package-bin'); // do not preserve _fields set in files, they are sus\n\n\nconst stripUnderscores = data => {\n  for (const key of Object.keys(data).filter(k => /^_/.test(k))) delete data[key];\n\n  return data;\n};\n\nconst normalize = data => {\n  add_id(data);\n  fixBundled(data);\n  pruneRepeatedOptionals(data);\n  fixScripts(data);\n  fixFunding(data);\n  normalizePackageBin(data);\n  return data;\n};\n\nrpj.normalize = normalize;\n\nconst add_id = data => {\n  if (data.name && data.version) data._id = `${data.name}@${data.version}`;\n  return data;\n}; // it was once common practice to list deps both in optionalDependencies\n// and in dependencies, to support npm versions that did not know abbout\n// optionalDependencies.  This is no longer a relevant need, so duplicating\n// the deps in two places is unnecessary and excessive.\n\n\nconst pruneRepeatedOptionals = data => {\n  const od = data.optionalDependencies;\n  const dd = data.dependencies || {};\n\n  if (od && typeof od === 'object') {\n    for (const name of Object.keys(od)) {\n      delete dd[name];\n    }\n  }\n\n  if (Object.keys(dd).length === 0) delete data.dependencies;\n  return data;\n};\n\nconst fixBundled = data => {\n  const bdd = data.bundledDependencies;\n  const bd = data.bundleDependencies === undefined ? bdd : data.bundleDependencies;\n  if (bd === false) data.bundleDependencies = [];else if (bd === true) data.bundleDependencies = Object.keys(data.dependencies || {});else if (bd && typeof bd === 'object') {\n    if (!Array.isArray(bd)) data.bundleDependencies = Object.keys(bd);else data.bundleDependencies = bd;\n  } else delete data.bundleDependencies;\n  delete data.bundledDependencies;\n  return data;\n};\n\nconst fixScripts = data => {\n  if (!data.scripts || typeof data.scripts !== 'object') {\n    delete data.scripts;\n    return data;\n  }\n\n  for (const [name, script] of Object.entries(data.scripts)) {\n    if (typeof script !== 'string') delete data.scripts[name];\n  }\n\n  return data;\n};\n\nconst fixFunding = data => {\n  if (data.funding && typeof data.funding === 'string') data.funding = {\n    url: data.funding\n  };\n  return data;\n};\n\nmodule.exports = rpj;","map":{"version":3,"sources":["/Users/johndoe/Nebe-data-vistualization/node_modules/npm/node_modules/read-package-json-fast/index.js"],"names":["promisify","require","fs","readFile","parse","rpj","path","then","data","normalize","stripUnderscores","catch","er","normalizePackageBin","key","Object","keys","filter","k","test","add_id","fixBundled","pruneRepeatedOptionals","fixScripts","fixFunding","name","version","_id","od","optionalDependencies","dd","dependencies","length","bdd","bundledDependencies","bd","bundleDependencies","undefined","Array","isArray","scripts","script","entries","funding","url","module","exports"],"mappings":"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","sourcesContent":["const {promisify} = require('util')\nconst fs = require('fs')\nconst readFile = promisify(fs.readFile)\nconst parse = require('json-parse-even-better-errors')\nconst rpj = path => readFile(path, 'utf8')\n  .then(data => normalize(stripUnderscores(parse(data))))\n  .catch(er => {\n    er.path = path\n    throw er\n  })\nconst normalizePackageBin = require('npm-normalize-package-bin')\n\n// do not preserve _fields set in files, they are sus\nconst stripUnderscores = data => {\n  for (const key of Object.keys(data).filter(k => /^_/.test(k)))\n    delete data[key]\n  return data\n}\n\nconst normalize = data => {\n  add_id(data)\n  fixBundled(data)\n  pruneRepeatedOptionals(data)\n  fixScripts(data)\n  fixFunding(data)\n  normalizePackageBin(data)\n  return data\n}\n\nrpj.normalize = normalize\n\nconst add_id = data => {\n  if (data.name && data.version)\n    data._id = `${data.name}@${data.version}`\n  return data\n}\n\n// it was once common practice to list deps both in optionalDependencies\n// and in dependencies, to support npm versions that did not know abbout\n// optionalDependencies.  This is no longer a relevant need, so duplicating\n// the deps in two places is unnecessary and excessive.\nconst pruneRepeatedOptionals = data => {\n  const od = data.optionalDependencies\n  const dd = data.dependencies || {}\n  if (od && typeof od === 'object') {\n    for (const name of Object.keys(od)) {\n      delete dd[name]\n    }\n  }\n  if (Object.keys(dd).length === 0)\n    delete data.dependencies\n  return data\n}\n\nconst fixBundled = data => {\n  const bdd = data.bundledDependencies\n  const bd = data.bundleDependencies === undefined ? bdd\n    : data.bundleDependencies\n\n  if (bd === false)\n    data.bundleDependencies = []\n  else if (bd === true)\n    data.bundleDependencies = Object.keys(data.dependencies || {})\n  else if (bd && typeof bd === 'object') {\n    if (!Array.isArray(bd))\n      data.bundleDependencies = Object.keys(bd)\n    else\n      data.bundleDependencies = bd\n  } else\n    delete data.bundleDependencies\n\n  delete data.bundledDependencies\n  return data\n}\n\nconst fixScripts = data => {\n  if (!data.scripts || typeof data.scripts !== 'object') {\n    delete data.scripts\n    return data\n  }\n\n  for (const [name, script] of Object.entries(data.scripts)) {\n    if (typeof script !== 'string')\n      delete data.scripts[name]\n  }\n  return data\n}\n\nconst fixFunding = data => {\n  if (data.funding && typeof data.funding === 'string')\n    data.funding = { url: data.funding }\n  return data\n}\n\nmodule.exports = rpj\n"]},"metadata":{},"sourceType":"script"}