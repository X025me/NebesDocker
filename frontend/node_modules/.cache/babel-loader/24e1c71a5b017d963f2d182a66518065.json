{"ast":null,"code":"import{withScriptjs,withGoogleMap,GoogleMap,Marker}from'react-google-maps';import{compose,withProps,withHandlers}from'recompose';import{jsx as _jsx}from\"react/jsx-runtime\";var _require=require('react-google-maps/lib/components/addons/MarkerClusterer'),MarkerClusterer=_require.MarkerClusterer;var MapWithAMarkerClusterer=compose(withProps({googleMapURL:'https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places',loadingElement:/*#__PURE__*/_jsx(\"div\",{style:{height:\"100%\"}}),containerElement:/*#__PURE__*/_jsx(\"div\",{style:{height:\"400px\"}}),mapElement:/*#__PURE__*/_jsx(\"div\",{style:{height:\"100%\"}})}),withHandlers({onMarkerClustererClick:function onMarkerClustererClick(){return function(markerClusterer){var clickedMarkers=markerClusterer.getMarkers();console.log(\"Current clicked markers length: \".concat(clickedMarkers.length));console.log(clickedMarkers);};}}),withScriptjs,withGoogleMap)(function(props){return/*#__PURE__*/_jsx(GoogleMap,{defaultZoom:3,defaultCenter:{lat:25.0391667,lng:121.525},children:/*#__PURE__*/_jsx(MarkerClusterer,{onClick:props.onMarkerClustererClick,averageCenter:true,enableRetinaIcons:true,gridSize:60,children:props.markers.map(function(marker){return/*#__PURE__*/_jsx(Marker,{position:{lat:marker.latitude,lng:marker.longitude}},marker.photo_id);})})});});export default MapWithAMarkerClusterer;","map":{"version":3,"sources":["/Users/johndoe/Nebe-data-vistualization/src/views/maps/google-maps/MarkerClusterer.js"],"names":["withScriptjs","withGoogleMap","GoogleMap","Marker","compose","withProps","withHandlers","require","MarkerClusterer","MapWithAMarkerClusterer","googleMapURL","loadingElement","height","containerElement","mapElement","onMarkerClustererClick","markerClusterer","clickedMarkers","getMarkers","console","log","length","props","lat","lng","markers","map","marker","latitude","longitude","photo_id"],"mappings":"AAAA,OAASA,YAAT,CAAuBC,aAAvB,CAAsCC,SAAtC,CAAiDC,MAAjD,KAA+D,mBAA/D,CACA,OAASC,OAAT,CAAkBC,SAAlB,CAA6BC,YAA7B,KAAiD,WAAjD,C,2CAEA,aAA4BC,OAAO,CAAC,yDAAD,CAAnC,CAAQC,eAAR,UAAQA,eAAR,CAEA,GAAMC,CAAAA,uBAAuB,CAAGL,OAAO,CACnCC,SAAS,CAAC,CACNK,YAAY,CACR,+HAFE,CAGNC,cAAc,cAAE,YAAK,KAAK,CAAE,CAAEC,MAAM,OAAR,CAAZ,EAHV,CAINC,gBAAgB,cAAE,YAAK,KAAK,CAAE,CAAED,MAAM,QAAR,CAAZ,EAJZ,CAKNE,UAAU,cAAE,YAAK,KAAK,CAAE,CAAEF,MAAM,OAAR,CAAZ,EALN,CAAD,CAD0B,CAQnCN,YAAY,CAAC,CACTS,sBAAsB,CAAE,wCAAM,UAACC,eAAD,CAAqB,CAC/C,GAAMC,CAAAA,cAAc,CAAGD,eAAe,CAACE,UAAhB,EAAvB,CACAC,OAAO,CAACC,GAAR,2CAA+CH,cAAc,CAACI,MAA9D,GACAF,OAAO,CAACC,GAAR,CAAYH,cAAZ,EACH,CAJuB,EADf,CAAD,CARuB,CAenCjB,YAfmC,CAgBnCC,aAhBmC,CAAP,CAiB9B,SAACqB,KAAD,qBACE,KAAC,SAAD,EAAW,WAAW,CAAE,CAAxB,CAA2B,aAAa,CAAE,CAAEC,GAAG,CAAE,UAAP,CAAmBC,GAAG,CAAE,OAAxB,CAA1C,uBACI,KAAC,eAAD,EAAiB,OAAO,CAAEF,KAAK,CAACP,sBAAhC,CAAwD,aAAa,KAArE,CAAsE,iBAAiB,KAAvF,CAAwF,QAAQ,CAAE,EAAlG,UACKO,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAkB,SAACC,MAAD,qBACf,KAAC,MAAD,EAA8B,QAAQ,CAAE,CAAEJ,GAAG,CAAEI,MAAM,CAACC,QAAd,CAAwBJ,GAAG,CAAEG,MAAM,CAACE,SAApC,CAAxC,EAAaF,MAAM,CAACG,QAApB,CADe,EAAlB,CADL,EADJ,EADF,EAjB8B,CAAhC,CA2BA,cAAerB,CAAAA,uBAAf","sourcesContent":["import { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { compose, withProps, withHandlers } from 'recompose';\n\nconst { MarkerClusterer } = require('react-google-maps/lib/components/addons/MarkerClusterer');\n\nconst MapWithAMarkerClusterer = compose(\n    withProps({\n        googleMapURL:\n            'https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places',\n        loadingElement: <div style={{ height: `100%` }} />,\n        containerElement: <div style={{ height: `400px` }} />,\n        mapElement: <div style={{ height: `100%` }} />\n    }),\n    withHandlers({\n        onMarkerClustererClick: () => (markerClusterer) => {\n            const clickedMarkers = markerClusterer.getMarkers();\n            console.log(`Current clicked markers length: ${clickedMarkers.length}`);\n            console.log(clickedMarkers);\n        }\n    }),\n    withScriptjs,\n    withGoogleMap\n)((props) => (\n    <GoogleMap defaultZoom={3} defaultCenter={{ lat: 25.0391667, lng: 121.525 }}>\n        <MarkerClusterer onClick={props.onMarkerClustererClick} averageCenter enableRetinaIcons gridSize={60}>\n            {props.markers.map((marker) => (\n                <Marker key={marker.photo_id} position={{ lat: marker.latitude, lng: marker.longitude }} />\n            ))}\n        </MarkerClusterer>\n    </GoogleMap>\n));\n\nexport default MapWithAMarkerClusterer;\n"]},"metadata":{},"sourceType":"module"}