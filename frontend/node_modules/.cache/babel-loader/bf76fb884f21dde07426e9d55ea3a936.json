{"ast":null,"code":"import _toConsumableArray from\"/Users/johndoe/Nebe-data-vistualization/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{useContext}from'react';import{ConfigContext}from'../../../contexts/ConfigContext';import useWindowSize from'../../../hooks/useWindowSize';import NavLogo from'./NavLogo';import NavContent from'./NavContent';import navigation from'../../../menu-items';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Navigation=function Navigation(){var configContext=useContext(ConfigContext);var collapseMenu=configContext.state.collapseMenu;var windowSize=useWindowSize();var navClass=['pcoded-navbar','menupos-static','menu-dark','navbar-default','brand-default','drp-icon-style1','menu-item-icon-style1','active-default','title-default'];if(windowSize.width<992&&collapseMenu){navClass=[].concat(_toConsumableArray(navClass),['mob-open']);}else if(collapseMenu){navClass=[].concat(_toConsumableArray(navClass),['navbar-collapsed']);}var navStyle;var navBarClass=['navbar-wrapper'];var navContent=/*#__PURE__*/_jsxs(\"div\",{className:navBarClass.join(' '),children:[/*#__PURE__*/_jsx(NavLogo,{}),/*#__PURE__*/_jsx(NavContent,{navigation:navigation.items})]});if(windowSize.width<992){navContent=/*#__PURE__*/_jsxs(\"div\",{className:\"navbar-wrapper\",children:[/*#__PURE__*/_jsx(NavLogo,{}),/*#__PURE__*/_jsx(NavContent,{navigation:navigation.items})]});}return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"nav\",{className:navClass.join(' '),style:navStyle,children:navContent})});};export default Navigation;","map":{"version":3,"sources":["/Users/johndoe/Nebe-data-vistualization/src/layouts/AdminLayout/Navigation/index.js"],"names":["React","useContext","ConfigContext","useWindowSize","NavLogo","NavContent","navigation","Navigation","configContext","collapseMenu","state","windowSize","navClass","width","navStyle","navBarClass","navContent","join","items"],"mappings":"sKAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CAEA,OAASC,aAAT,KAA8B,iCAA9B,CACA,MAAOC,CAAAA,aAAP,KAA0B,8BAA1B,CAEA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,qBAAvB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrB,GAAMC,CAAAA,aAAa,CAAGP,UAAU,CAACC,aAAD,CAAhC,CACA,GAAQO,CAAAA,YAAR,CAAyBD,aAAa,CAACE,KAAvC,CAAQD,YAAR,CACA,GAAME,CAAAA,UAAU,CAAGR,aAAa,EAAhC,CAEA,GAAIS,CAAAA,QAAQ,CAAG,CACX,eADW,CAEX,gBAFW,CAGX,WAHW,CAIX,gBAJW,CAKX,eALW,CAMX,iBANW,CAOX,uBAPW,CAQX,gBARW,CASX,eATW,CAAf,CAYA,GAAID,UAAU,CAACE,KAAX,CAAmB,GAAnB,EAA0BJ,YAA9B,CAA4C,CACxCG,QAAQ,8BAAOA,QAAP,GAAiB,UAAjB,EAAR,CACH,CAFD,IAEO,IAAIH,YAAJ,CAAkB,CACrBG,QAAQ,8BAAOA,QAAP,GAAiB,kBAAjB,EAAR,CACH,CAED,GAAIE,CAAAA,QAAJ,CAEA,GAAIC,CAAAA,WAAW,CAAG,CAAC,gBAAD,CAAlB,CAEA,GAAIC,CAAAA,UAAU,cACV,aAAK,SAAS,CAAED,WAAW,CAACE,IAAZ,CAAiB,GAAjB,CAAhB,wBACI,KAAC,OAAD,IADJ,cAEI,KAAC,UAAD,EAAY,UAAU,CAAEX,UAAU,CAACY,KAAnC,EAFJ,GADJ,CAMA,GAAIP,UAAU,CAACE,KAAX,CAAmB,GAAvB,CAA4B,CACxBG,UAAU,cACN,aAAK,SAAS,CAAC,gBAAf,wBACI,KAAC,OAAD,IADJ,cAEI,KAAC,UAAD,EAAY,UAAU,CAAEV,UAAU,CAACY,KAAnC,EAFJ,GADJ,CAMH,CACD,mBACI,KAAC,KAAD,CAAO,QAAP,wBACI,YAAK,SAAS,CAAEN,QAAQ,CAACK,IAAT,CAAc,GAAd,CAAhB,CAAoC,KAAK,CAAEH,QAA3C,UACKE,UADL,EADJ,EADJ,CAOH,CAhDD,CAkDA,cAAeT,CAAAA,UAAf","sourcesContent":["import React, { useContext } from 'react';\n\nimport { ConfigContext } from '../../../contexts/ConfigContext';\nimport useWindowSize from '../../../hooks/useWindowSize';\n\nimport NavLogo from './NavLogo';\nimport NavContent from './NavContent';\nimport navigation from '../../../menu-items';\n\nconst Navigation = () => {\n    const configContext = useContext(ConfigContext);\n    const { collapseMenu } = configContext.state;\n    const windowSize = useWindowSize();\n\n    let navClass = [\n        'pcoded-navbar',\n        'menupos-static',\n        'menu-dark',\n        'navbar-default',\n        'brand-default',\n        'drp-icon-style1',\n        'menu-item-icon-style1',\n        'active-default',\n        'title-default'\n    ];\n\n    if (windowSize.width < 992 && collapseMenu) {\n        navClass = [...navClass, 'mob-open'];\n    } else if (collapseMenu) {\n        navClass = [...navClass, 'navbar-collapsed'];\n    }\n\n    let navStyle;\n\n    let navBarClass = ['navbar-wrapper'];\n\n    let navContent = (\n        <div className={navBarClass.join(' ')}>\n            <NavLogo />\n            <NavContent navigation={navigation.items} />\n        </div>\n    );\n    if (windowSize.width < 992) {\n        navContent = (\n            <div className=\"navbar-wrapper\" >\n                <NavLogo />\n                <NavContent navigation={navigation.items} />\n            </div>\n        );\n    }\n    return (\n        <React.Fragment>\n            <nav className={navClass.join(' ')} style={navStyle}>\n                {navContent}\n            </nav>\n        </React.Fragment>\n    );\n};\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}