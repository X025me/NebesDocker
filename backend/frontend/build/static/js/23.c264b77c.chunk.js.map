{"version":3,"sources":["views/ui-elements/basic/BasicButton.js","components/Widgets/Statistic/Notification.js","components/Card/MainCard.js"],"names":["BasicButton","buttonVariants","buttonOptions","variant","icon","buttonOnlyIconOptions","basicButtons","map","idx","overlay","className","outlineButtons","squareButtons","disabledButtons","disabled","roundedButtons","glowButtons","iconButtons","button","outlineIconButtons","onlyIconButtons","onlyOutlineIconButtons","onlyIconRoundedButtons","onlyOutlineIconRoundedButtons","basicDropdownButton","title","id","Item","eventKey","splitDropdownButton","Divider","basicOutlineDropdownButton","splitOutlineDropdownButton","basicIconDropdownButton","outlineIconDropdownButton","basicIconDropdownRoundedButton","outlineIconDropdownRoundedButton","Fragment","sm","message","link","md","size","type","defaultValue","value","name","xl","as","ButtonGroup","vertical","Notification","props","Link","href","target","MainCard","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","isOption","children","cardClass","optionClass","useState","fullCard","setFullCard","collapseCard","setCollapseCard","loadCard","setloadCard","cardRemove","setCardRemove","windowSize","useWindowSize","mainCardClass","alignRight","Toggle","Menu","onClick","to","setInterval","Header","Title","position","top","left","right","width","height","join","style","in","Body"],"mappings":"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","file":"static/js/23.c264b77c.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Row,\n    Col,\n    Button,\n    OverlayTrigger,\n    Tooltip,\n    ButtonToolbar,\n    ToggleButtonGroup,\n    ToggleButton,\n    Dropdown,\n    DropdownButton,\n    SplitButton,\n    ButtonGroup\n} from 'react-bootstrap';\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\n\nimport Card from '../../../components/Card/MainCard';\n\nconst BasicButton = () => {\n    const buttonVariants = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\n    const buttonOptions = [\n        { variant: 'primary', icon: 'feather icon-thumbs-up mx-1' },\n        { variant: 'secondary', icon: 'feather icon-camera mx-1' },\n        { variant: 'success', icon: 'feather icon-check-circle mx-1' },\n        { variant: 'danger', icon: 'feather icon-slash mx-1' },\n        { variant: 'warning', icon: 'feather icon-alert-triangle mx-1' },\n        { variant: 'info', icon: 'feather icon-info mx-1' }\n    ];\n\n    const buttonOnlyIconOptions = [\n        { variant: 'primary', icon: 'feather icon-thumbs-up' },\n        { variant: 'secondary', icon: 'feather icon-camera' },\n        { variant: 'success', icon: 'feather icon-check-circle' },\n        { variant: 'danger', icon: 'feather icon-slash' },\n        { variant: 'warning', icon: 'feather icon-alert-triangle' },\n        { variant: 'info', icon: 'feather icon-info' }\n    ];\n\n    const basicButtons = buttonVariants.map((variant, idx) => (\n        <OverlayTrigger key={idx} overlay={<Tooltip>{variant}</Tooltip>}>\n            <Button variant={variant} className=\"text-capitalize\">\n                {variant}\n            </Button>\n        </OverlayTrigger>\n    ));\n\n    const outlineButtons = buttonVariants.map((variant, idx) => (\n        <OverlayTrigger key={idx} overlay={<Tooltip>{'outline-' + variant}</Tooltip>}>\n            <Button variant={'outline-' + variant} className=\"text-capitalize\">\n                {variant}\n            </Button>\n        </OverlayTrigger>\n    ));\n\n    const squareButtons = buttonVariants.map((variant, idx) => (\n        <Button key={idx} className=\"btn-square text-capitalize\" variant={variant}>\n            {variant}\n        </Button>\n    ));\n    const disabledButtons = buttonVariants.map((variant, idx) => (\n        <Button key={idx} disabled variant={variant} className=\"text-capitalize\">\n            {variant}\n        </Button>\n    ));\n    const roundedButtons = buttonVariants.map((variant, idx) => (\n        <Button key={idx} className=\"btn-rounded text-capitalize\" variant={variant}>\n            {variant}\n        </Button>\n    ));\n\n    const glowButtons = buttonVariants.map((variant, idx) => (\n        <OverlayTrigger key={idx} overlay={<Tooltip>{'btn-glow-' + variant}</Tooltip>}>\n            <Button className={'text-capitalize btn-glow-' + variant} variant={variant}>\n                {variant}\n            </Button>\n        </OverlayTrigger>\n    ));\n\n    const iconButtons = buttonOptions.map((button, idx) => (\n        <Button key={idx} variant={button.variant} className=\"text-capitalize\">\n            <i className={button.icon} />\n            {button.variant}\n        </Button>\n    ));\n\n    const outlineIconButtons = buttonOptions.map((button, idx) => (\n        <Button key={idx} variant={'outline-' + button.variant} className=\"text-capitalize\">\n            <i className={button.icon} />\n            {button.variant}\n        </Button>\n    ));\n\n    const onlyIconButtons = buttonOnlyIconOptions.map((button, idx) => (\n        <Button className=\"btn-icon\" key={idx} variant={button.variant}>\n            <i className={button.icon} />\n        </Button>\n    ));\n\n    const onlyOutlineIconButtons = buttonOnlyIconOptions.map((button, idx) => (\n        <Button className=\"btn-icon\" key={idx} variant={'outline-' + button.variant}>\n            <i className={button.icon} />\n        </Button>\n    ));\n\n    const onlyIconRoundedButtons = buttonOnlyIconOptions.map((button, idx) => (\n        <Button className=\"btn-icon btn-rounded\" key={idx} variant={button.variant}>\n            <i className={button.icon} />\n        </Button>\n    ));\n\n    const onlyOutlineIconRoundedButtons = buttonOnlyIconOptions.map((button, idx) => (\n        <Button className=\"btn-icon btn-rounded\" key={idx} variant={'outline-' + button.variant}>\n            <i className={button.icon} />\n        </Button>\n    ));\n\n    const basicDropdownButton = buttonOptions.map((button) => {\n        const title = button.variant;\n        return (\n            <DropdownButton\n                className=\"text-capitalize\"\n                title={title}\n                variant={button.variant}\n                id={`dropdown-variants-${button.variant}`}\n                key={button.variant}\n            >\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n            </DropdownButton>\n        );\n    });\n\n    const splitDropdownButton = buttonOptions.map((button) => {\n        const title = button.variant;\n        return (\n            <SplitButton\n                title={title}\n                variant={button.variant}\n                id={`dropdown-split-variants-${button.variant}`}\n                key={button.variant}\n                className=\"mr-2 mb-2 text-capitalize\"\n            >\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n            </SplitButton>\n        );\n    });\n\n    const basicOutlineDropdownButton = buttonOptions.map((button) => {\n        const title = button.variant;\n        return (\n            <DropdownButton\n                title={title}\n                variant={'outline-' + button.variant}\n                id={`dropdown-variants-${button.variant}`}\n                key={button.variant}\n                className=\"text-capitalize\"\n            >\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n            </DropdownButton>\n        );\n    });\n\n    const splitOutlineDropdownButton = buttonOptions.map((button) => {\n        const title = button.variant;\n        return (\n            <SplitButton\n                title={title}\n                variant={'outline-' + button.variant}\n                id={`dropdown-split-variants-${button.variant}`}\n                key={button.variant}\n                className=\"mr-2 mb-2 text-capitalize\"\n            >\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n            </SplitButton>\n        );\n    });\n\n    const basicIconDropdownButton = buttonOnlyIconOptions.map((button) => {\n        const title = <i className={button.icon} />;\n        return (\n            <DropdownButton\n                title={title}\n                variant={button.variant}\n                id={`dropdown-variants-${button.variant}`}\n                key={button.variant}\n                className=\"drp-icon\"\n            >\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n            </DropdownButton>\n        );\n    });\n\n    const outlineIconDropdownButton = buttonOnlyIconOptions.map((button) => {\n        const title = <i className={button.icon} />;\n        return (\n            <DropdownButton\n                title={title}\n                variant={'outline-' + button.variant}\n                id={`dropdown-variants-${button.variant}`}\n                key={button.variant}\n                className=\"drp-icon\"\n            >\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n            </DropdownButton>\n        );\n    });\n\n    const basicIconDropdownRoundedButton = buttonOnlyIconOptions.map((button) => {\n        const title = <i className={button.icon} />;\n        return (\n            <DropdownButton\n                title={title}\n                variant={button.variant}\n                id={`dropdown-variants-${button.variant}`}\n                key={button.variant}\n                className=\"drp-icon btn-rounded\"\n            >\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n            </DropdownButton>\n        );\n    });\n\n    const outlineIconDropdownRoundedButton = buttonOnlyIconOptions.map((button) => {\n        const title = <i className={button.icon} />;\n        return (\n            <DropdownButton\n                title={title}\n                variant={'outline-' + button.variant}\n                id={`dropdown-variants-${button.variant}`}\n                key={button.variant}\n                className=\"drp-icon btn-rounded\"\n            >\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\n            </DropdownButton>\n        );\n    });\n\n    return (\n        <React.Fragment>\n            <Row>\n                <Col sm={12}>\n                    <ModuleNotification\n                        message=\"For more info please check the components's official documentation\"\n                        link=\"https://react-bootstrap.github.io/components/buttons/\"\n                    />\n                </Col>\n            </Row>\n            <Row className=\"btn-page\">\n                <Col>\n                    <Card title=\"Default\">\n                        {basicButtons}\n                        <OverlayTrigger overlay={<Tooltip>link</Tooltip>}>\n                            <Button variant=\"link\">Link</Button>\n                        </OverlayTrigger>\n                    </Card>\n                    <Card title=\"Outline\">{outlineButtons}</Card>\n                    <Card title=\"Square Button\">{squareButtons}</Card>\n                    <Card title=\"Disabled Button\">{disabledButtons}</Card>\n                    <Card title=\"Rounded Button\">{roundedButtons}</Card>\n                    <Card title=\"Glow Button\">{glowButtons}</Card>\n                    <Card title=\"Shadow Button\">\n                        <OverlayTrigger overlay={<Tooltip>shadow-1</Tooltip>}>\n                            <Button className=\"shadow-1\" variant=\"primary\">\n                                Shadow 1\n                            </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger overlay={<Tooltip>shadow-2</Tooltip>}>\n                            <Button className=\"shadow-2\" variant=\"success\">\n                                Shadow 2\n                            </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger overlay={<Tooltip>shadow-3</Tooltip>}>\n                            <Button className=\"shadow-3\" variant=\"danger\">\n                                Shadow 3\n                            </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger overlay={<Tooltip>shadow-4</Tooltip>}>\n                            <Button className=\"shadow-4\" variant=\"warning\">\n                                Shadow 4\n                            </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger overlay={<Tooltip>shadow-5</Tooltip>}>\n                            <Button className=\"shadow-5\" variant=\"info\">\n                                Shadow 5\n                            </Button>\n                        </OverlayTrigger>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"btn-page\">\n                <Col md={6}>\n                    <Card title=\"Sizes [ Large ]\">\n                        <Button variant=\"primary\" size=\"lg\">\n                            Large Button\n                        </Button>\n                        <Button variant=\"secondary\" size=\"lg\">\n                            Large Button\n                        </Button>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Sizes [ Small ]\">\n                        <Button variant=\"primary\" size=\"sm\">\n                            Small Button\n                        </Button>\n                        <Button variant=\"secondary\" size=\"sm\">\n                            Small Button\n                        </Button>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Checkbox Button\">\n                        <ButtonToolbar>\n                            <ToggleButtonGroup type=\"checkbox\" defaultValue={1}>\n                                <ToggleButton variant=\"secondary\" value={1}>\n                                    Checkbox\n                                </ToggleButton>\n                                <ToggleButton variant=\"secondary\" value={2}>\n                                    Checkbox\n                                </ToggleButton>\n                            </ToggleButtonGroup>\n                        </ButtonToolbar>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Radio Button\">\n                        <ButtonToolbar>\n                            <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\n                                <ToggleButton variant=\"secondary\" value={1}>\n                                    Active\n                                </ToggleButton>\n                                <ToggleButton variant=\"secondary\" value={2}>\n                                    Radio\n                                </ToggleButton>\n                                <ToggleButton variant=\"secondary\" value={3}>\n                                    Radio\n                                </ToggleButton>\n                            </ToggleButtonGroup>\n                        </ButtonToolbar>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Button With Icon\">{iconButtons}</Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Outline Icon Buttons\">{outlineIconButtons}</Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Only Icon\">{onlyIconButtons}</Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Outline Icon\">{onlyOutlineIconButtons}</Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Icon Button Rounded\">{onlyIconRoundedButtons}</Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Icon Outline Button Rounded\">{onlyOutlineIconRoundedButtons}</Card>\n                </Col>\n            </Row>\n            <Row className=\"btn-page\">\n                <Col>\n                    <Card title=\"Basic Dropdown Button\">\n                        <ButtonToolbar>{basicDropdownButton}</ButtonToolbar>\n                    </Card>\n                    <Card title=\"Split Dropdown Button\">\n                        <ButtonToolbar>{splitDropdownButton}</ButtonToolbar>\n                    </Card>\n                    <Card title=\"Basic Outline Dropdown Button\">\n                        <ButtonToolbar>{basicOutlineDropdownButton}</ButtonToolbar>\n                    </Card>\n                    <Card title=\"Split Outline Dropdown Button\">\n                        <ButtonToolbar>{splitOutlineDropdownButton}</ButtonToolbar>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"btn-page\">\n                <Col md={6}>\n                    <Card title=\"Basic Icon Dropdown\">\n                        <ButtonToolbar>{basicIconDropdownButton}</ButtonToolbar>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Outline Icon Dropdown\">\n                        <ButtonToolbar>{outlineIconDropdownButton}</ButtonToolbar>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Basic Rounded Icon Dropdown\">\n                        <ButtonToolbar>{basicIconDropdownRoundedButton}</ButtonToolbar>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Outline Rounded Icon Dropdown\">\n                        <ButtonToolbar>{outlineIconDropdownRoundedButton}</ButtonToolbar>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Basic Button Group\">\n                        <ButtonGroup aria-label=\"Basic example\">\n                            <Button variant=\"secondary\">Left</Button>\n                            <Button variant=\"secondary\">Middle</Button>\n                            <Button variant=\"secondary\">Right</Button>\n                        </ButtonGroup>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Button Toolbar\">\n                        <ButtonToolbar aria-label=\"Toolbar with button groups\">\n                            <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\n                                <Button variant=\"secondary\">1</Button>\n                                <Button variant=\"secondary\">2</Button>\n                                <Button variant=\"secondary\">3</Button>\n                                <Button variant=\"secondary\">4</Button>\n                            </ButtonGroup>\n\n                            <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\n                                <Button variant=\"secondary\">5</Button>\n                                <Button variant=\"secondary\">6</Button>\n                                <Button variant=\"secondary\">7</Button>\n                            </ButtonGroup>\n\n                            <ButtonGroup aria-label=\"Third group\">\n                                <Button variant=\"secondary\">8</Button>\n                            </ButtonGroup>\n                        </ButtonToolbar>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"btn-page\">\n                <Col>\n                    <Card title=\"Button Toolbar Size\">\n                        <Row>\n                            <Col xl={4} md={12}>\n                                <p>\n                                    use <code>size=\"lg\"</code> props in component <code>ButtonGroup</code> to get large button toolbar\n                                </p>\n                                <ButtonGroup size=\"lg\">\n                                    <Button variant=\"secondary\">Left</Button>\n                                    <Button variant=\"secondary\">Middle</Button>\n                                    <Button variant=\"secondary\">Right</Button>\n                                </ButtonGroup>\n                            </Col>\n                            <Col xl={4} md={6}>\n                                <p>default toolbar size</p>\n                                <ButtonGroup>\n                                    <Button variant=\"secondary\">Left</Button>\n                                    <Button variant=\"secondary\">Middle</Button>\n                                    <Button variant=\"secondary\">Right</Button>\n                                </ButtonGroup>\n                            </Col>\n                            <Col xl={4} md={6}>\n                                <p>\n                                    use <code>size=\"sm\"</code> props in component <code>ButtonGroup</code> to get small button toolbar\n                                </p>\n                                <ButtonGroup size=\"sm\">\n                                    <Button variant=\"secondary\">Left</Button>\n                                    <Button variant=\"secondary\">Middle</Button>\n                                    <Button variant=\"secondary\">Right</Button>\n                                </ButtonGroup>\n                            </Col>\n                        </Row>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"btn-page\">\n                <Col md={6}>\n                    <Card title=\"Nesting\">\n                        <ButtonGroup>\n                            <Button variant=\"secondary\">1</Button>\n                            <Button variant=\"secondary\">2</Button>\n                            <DropdownButton variant=\"secondary\" as={ButtonGroup} title=\"Dropdown\" id=\"bg-nested-dropdown\">\n                                <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\n                                <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\n                            </DropdownButton>\n                        </ButtonGroup>\n                    </Card>\n                </Col>\n                <Col md={6}>\n                    <Card title=\"Vertical Variation\">\n                        <Row>\n                            <Col>\n                                <ButtonGroup vertical>\n                                    <Button variant=\"secondary\" className=\"mr-0 mb-0\">\n                                        1\n                                    </Button>\n                                    <Button variant=\"secondary\" className=\"mr-0 mb-0\">\n                                        2\n                                    </Button>\n                                    <Button variant=\"secondary\" className=\"mr-0 mb-0\">\n                                        3\n                                    </Button>\n                                </ButtonGroup>\n                            </Col>\n                            <Col>\n                                <ButtonGroup vertical>\n                                    <Button variant=\"secondary\" className=\"mr-0 mb-0\">\n                                        1\n                                    </Button>\n                                    <Button variant=\"secondary\" className=\"mr-0 mb-0\">\n                                        2\n                                    </Button>\n                                    <DropdownButton variant=\"secondary\" as={ButtonGroup} title=\"Dropdown\" id=\"bg-nested-dropdown\">\n                                        <Dropdown.Item eventKey=\"1\">Dropdown link</Dropdown.Item>\n                                        <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\n                                    </DropdownButton>\n                                </ButtonGroup>\n                            </Col>\n                        </Row>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default BasicButton;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Notification = (props) => {\n    return (\n        <React.Fragment>\n            <Alert variant=\"warning\">\n                {props.message}\n                <Alert.Link href={props.link} target=\"_blank\" className=\"float-right\">\n                    Demo & Documentation\n                </Alert.Link>\n            </Alert>\n        </React.Fragment>\n    );\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport { Dropdown, Card, Collapse } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport useWindowSize from '../../hooks/useWindowSize';\n\nconst MainCard = (props) => {\n    const { isOption, title, children, cardClass, optionClass } = props;\n\n    const [fullCard, setFullCard] = useState(false);\n    const [collapseCard, setCollapseCard] = useState(false);\n    const [loadCard, setloadCard] = useState(false);\n    const [cardRemove, setCardRemove] = useState(false);\n\n    const windowSize = useWindowSize();\n\n    const cardReloadHandler = () => {\n        setloadCard(true);\n        setInterval(() => {\n            setloadCard(false);\n        }, 3000);\n    };\n\n    const cardRemoveHandler = () => {\n        setCardRemove(true);\n    };\n\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader;\n    let card = '';\n    let mainCardClass = [];\n\n    if (isOption) {\n        cardHeaderRight = (\n            <div className={'card-header-right ' + optionClass}>\n                <Dropdown alignRight={true} className=\"btn-group card-option\">\n                    <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\n                        <i className=\"feather icon-more-horizontal\" />\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\n                        <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={() => setFullCard(!fullCard)}>\n                            <i className={fullCard ? 'feather icon-minimize' : 'feather icon-maximize'} />\n                            <Link to=\"#\"> {fullCard ? 'Restore' : 'Maximize'} </Link>\n                        </Dropdown.Item>\n                        <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={() => setCollapseCard(!collapseCard)}>\n                            <i className={collapseCard ? 'feather icon-plus' : 'feather icon-minus'} />\n                            <Link to=\"#\"> {collapseCard ? 'Expand' : 'Collapse'} </Link>\n                        </Dropdown.Item>\n                        <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={cardReloadHandler}>\n                            <i className=\"feather icon-refresh-cw\" />\n                            <Link to=\"#\"> Reload </Link>\n                        </Dropdown.Item>\n                        <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={cardRemoveHandler}>\n                            <i className=\"feather icon-trash\" />\n                            <Link to=\"#\"> Remove </Link>\n                        </Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n            </div>\n        );\n    }\n\n    cardHeader = (\n        <Card.Header>\n            <Card.Title as=\"h5\">{title}</Card.Title>\n            {cardHeaderRight}\n        </Card.Header>\n    );\n\n    if (fullCard) {\n        mainCardClass = [...mainCardClass, 'full-card'];\n        fullScreenStyle = { position: 'fixed', top: 0, left: 0, right: 0, width: windowSize.width, height: windowSize.height };\n    }\n\n    if (loadCard) {\n        mainCardClass = [...mainCardClass, 'card-load'];\n        loader = (\n            <div className=\"card-loader\">\n                <i className=\"pct-loader1 anim-rotate\" />\n            </div>\n        );\n    }\n\n    if (cardRemove) {\n        mainCardClass = [...mainCardClass, 'd-none'];\n    }\n\n    if (cardClass) {\n        mainCardClass = [...mainCardClass, cardClass];\n    }\n\n    card = (\n        <Card className={mainCardClass.join(' ')} style={fullScreenStyle}>\n            {cardHeader}\n            <Collapse in={!collapseCard}>\n                <div>\n                    <Card.Body>{children}</Card.Body>\n                </div>\n            </Collapse>\n            {loader}\n        </Card>\n    );\n\n    return <React.Fragment>{card}</React.Fragment>;\n};\n\nexport default MainCard;\n"],"sourceRoot":""}