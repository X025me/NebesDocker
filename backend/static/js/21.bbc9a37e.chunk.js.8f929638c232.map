{"version":3,"sources":["views/home/Home/Candidats.js","views/home/Home/PollingStation.js","views/home/Winners.js","views/home/Result.js","views/home/Home/index.js"],"names":["Option","Select","Candidats","dataIndex","useState","searchText","setSearchText","searchedColumn","setSearchedColumn","politicalparty","setPoliticalparty","searchInput","loading","setLoading","next","setNext","back","setBack","totalPage","setTotalPage","currentPage","setCurrentPage","pageSizes","setPagesizes","offset","constituencyid","setConstituencyid","politicalpartyid","setPoliticalpartyId","genders","setGender","regionid","setRegionid","type","setType","rconstid","setRConstId","electiontype","setElectionType","disability","setDisability","candidates","setCandidates","constituency","setConstituency","regionalconstituncy","setRegionalConstituency","cand_to_xl","setXL","componentRef","useRef","handlePrint","useReactToPrint","content","current","getConstituency","value","a","fetch","API_SERVER1","response","json","res","console","log","getRConstituency","getParty","apiGetter","data","pageSize","region","gender","results","prepareXL","count","obj","cand","map","index","regional_constituency","rcconstituency","party","address","push","ExportCSV","csvData","fileName","style","fontSize","backgroundColor","borderWidth","marginLeft","color","width","onClick","e","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","apiGetterOnChange","url","action","previous","alert","handleSearch","selectedKeys","confirm","columns","title","key","filterDropdown","setSelectedKeys","clearFilters","padding","ref","node","placeholder","onChange","target","onPressEnter","marginBottom","display","icon","SearchOutlined","size","handleReset","closeDropdown","filterIcon","filtered","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","highlightStyle","searchWords","autoEscape","textToHighlight","onSelectConstId","useEffect","flexDirection","marginRight","Group","buttonStyle","justifyContent","marginTop","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","filterSort","optionA","optionB","localeCompare","item","constituencyname","regionalconstituencyid","regionalconstituencyname","disabled","politicalpartyname","pagination","position","dataSource","page","onShowSizeChange","defaultCurrent","total","itemRender","originalElement","PollingStation","pageS","off","dat","gen","types","getColumnSearchProps","sorter","b","length","sortDirections","Winners","setUrl","result","candidate","electionid","general","regionname","hoprconstituency","addressid","fullname","defaultValue","Result","TabPane","Tabs","Home","Fragment","defaultActiveKey","tab"],"mappings":"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","file":"static/js/21.bbc9a37e.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { Table, Select, Input, Button, Space, Radio, Pagination } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { API_SERVER1 } from './../../../config/constant';\nimport { useReactToPrint } from 'react-to-print';\nimport { SearchOutlined } from '@ant-design/icons';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\n\n\nconst { Option } = Select;\n\nexport default function Candidats() {\n    const [searchText, setSearchText] = useState();\n    const [searchedColumn, setSearchedColumn] = useState('');\n    const [politicalparty, setPoliticalparty] = useState([])\n    var [searchInput, setSearchInput] = useState('');\n    var [loading, setLoading] = useState(false)\n    var [next, setNext] = useState('')\n    var [back, setBack] = useState('')\n    var [totalPage, setTotalPage] = useState(0)\n    var [currentPage, setCurrentPage] = useState(1)\n    var [pageSizes, setPagesizes] = useState(10)\n    var [offset, setOffset] = useState(10)\n    let [constituencyid, setConstituencyid] = useState('')\n    let [politicalpartyid, setPoliticalpartyId] = useState('')\n    let [genders, setGender] = useState('')\n    let [regionid, setRegionid] = useState('')\n    let [type, setType] = useState('')\n    let [rconstid, setRConstId] = useState('')\n    let [electiontype, setElectionType] = useState(1)\n    let [disability, setDisability] = useState(3)\n    const [candidates, setCandidates] = useState([])\n    const [constituency, setConstituency] = useState([])\n    const [regionalconstituncy, setRegionalConstituency] = useState([])\n    const [cand_to_xl, setXL] = useState([])\n    const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n    const getConstituency = async(value) =>{\n        try {\n            const response = await fetch(API_SERVER1+`data/read/constituency/?search=${value}`)\n            const res = await response.json()\n            setConstituency(res)\n            \n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const getRConstituency = async(value) =>{\n        try {\n            const response = await fetch(API_SERVER1+`data/read/rconstitunecy/?search=${value}`)\n            const res = await response.json()\n            setRegionalConstituency(res)\n            \n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const getParty = async() =>{\n        try {\n            const response = await fetch(API_SERVER1+`data/read/party_list/`)\n            const res = await response.json()\n            setPoliticalparty(res)\n            \n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    const apiGetter = async(data) =>{\n        try {\n            const response = await fetch(API_SERVER1+`data/read/candidate_list/${data.disability}?limit=${data.pageSize}&offset=${data.offset}&search=${data.region}+${data.constituencyid}+${data.gender}+${data.regionalconstituncy}+${data.type}+${data.politicalpartyid}`)\n            const res = await response.json()\n            setCandidates(res.results)\n            prepareXL(res.results)\n            console.log(res.results)\n            setTotalPage(res.count)\n            setNext(res.next)\n            setBack(res.back)\n            setLoading(false)\n            \n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const prepareXL = (data) =>{\n        let obj = {}\n        var cand = []\n        data.map((candidates, index) =>{\n            obj = {\n                region: candidates.region,\n                constituency: candidates.constituency,\n                regional_constituency: candidates.rcconstituency,\n                disability: candidates.disability,\n                politicalparty: candidates.party,\n                address: candidates.address,\n                gender: candidates.gender,\n                address: candidates.address\n            }\n            cand.push(obj)\n        })\n        console.log('data is ', cand)\n        setXL(cand)\n        \n    }\n    const ExportCSV = ({csvData, fileName}) => {\n        \n    \n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n        const fileExtension = '.xlsx';\n    \n        const exportToCSV = (csvData, fileName) => {\n            const ws = XLSX.utils.json_to_sheet(csvData);\n            const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n            const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n            const data = new Blob([excelBuffer], {type: fileType});\n            FileSaver.saveAs(data, fileName + fileExtension);\n        }\n            \n        \n    \n        return (\n            <button style={{fontSize: 12, backgroundColor: '#007bff', borderWidth: 0, marginLeft: 10, color: 'white', width: 100}}  onClick={(e) => exportToCSV(csvData,fileName)}>Excel</button>\n        )\n    }\n    \n    const apiGetterOnChange = async(url, action) =>{\n        try {\n            const response = await fetch(url)\n            const res = await response.json()\n            setCandidates(res.results)\n            setTotalPage(res.count)\n            if(action == 'next'){\n                setCurrentPage(currentPage+1)\n            }\n            else if (action == 'back'){\n                setCurrentPage(currentPage-1)\n            }\n            setNext(res.next)\n            setBack(res.previous)            \n        } catch (error) {\n            alert('Network Error')\n        }\n    }\n\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\n        confirm();\n\n        setSearchText(selectedKeys[0]);\n        setSearchedColumn(dataIndex);\n    };\n\n    const handleReset = (clearFilters) => {\n        clearFilters();\n        setSearchText('');\n    };\n\n    const getColumnSearchProps = (dataIndex) => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    ref={(node) => {\n                        searchInput = node;\n                    }}\n                    placeholder={`Search ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{ marginBottom: 8, display: 'block' }}\n                />\n                <Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                        icon={<SearchOutlined />}\n                        size=\"small\"\n                        style={{ width: 90 }}\n                    >\n                        Search\n                    </Button>\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                        Reset\n                    </Button>\n                    <Button\n                        type=\"link\"\n                        size=\"small\"\n                        onClick={() => {\n                            confirm({ closeDropdown: false });\n                            setSearchText(selectedKeys[0]);\n                            setSearchedColumn(dataIndex);\n                        }}\n                    >\n                        Filter\n                    </Button>\n                </Space>\n            </div>\n        ),\n        filterIcon: (filtered) => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value, record) => (record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : ''),\n        onFilterDropdownVisibleChange: (visible) => {\n            if (visible) {\n                setTimeout(() => searchInput.select(), 100);\n            }\n        },\n\n        render: (text) =>\n            searchedColumn === dataIndex ? (\n                <Highlighter\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                    searchWords={[searchText]}\n                    autoEscape\n                    textToHighlight={text ? text.toString() : ''}\n                />\n            ) : (\n                text\n            )\n    });\n    const columns = [\n        {\n            title: 'Region',\n            dataIndex: 'region',\n            key: 'region',\n            width: '20%',\n        },    \n        {\n            title: 'Constituency',\n            dataIndex: 'constituency',\n            key: 'constituency',\n            width: '20%',\n        },        \n        {\n            title: 'Regional Constituncy',\n            dataIndex: 'rcconstituency',\n            key: 'rcconstituency',\n            width: '20%',\n        },        \n        {\n            title: 'Party',\n            dataIndex: 'party',\n            key: 'party',\n            width: '14%',\n        },\n        {\n            title: 'Full Name',\n            dataIndex: 'fullname',\n            key: 'fullname',\n            width: '20%',\n            ...getColumnSearchProps('fullname')\n        },\n        {\n            title: 'Gender',\n            dataIndex: 'gender',\n            key: 'gender',\n            width: '10%',\n        },\n    \n\n\n\n    ];\n    const onPageChange = (page, pageSize) =>{\n        setLoading(true)\n        let data = {pageSize: pageSize, offset: page*pageSize,constituencyid: constituencyid,region: regionid, type: electiontype, gender: genders,type: type,  regionalconstituncy: rconstid, politicalpartyid: politicalpartyid, disability: disability}\n\n        apiGetter(data)\n        setCurrentPage(page)\n    }\n    const onSizetoShowChange = (current, size) =>{\n        let data = {pageSize: size, offset: 0,constituencyid: constituencyid,region: regionid, type: electiontype, gender: genders,type: type,  regionalconstituncy: rconstid, politicalpartyid: politicalpartyid, disability: disability}\n        setPagesizes(size)\n        apiGetter(data)\n    }\n\n    function itemRender(current, type, originalElement) {\n        if (type === 'prev') {\n          return <a onClick={() =>apiGetterOnChange(back, 'back')}>Previous</a>;\n        }\n        if (type === 'next') {\n          return <a onClick={() =>apiGetterOnChange(next, 'next')}>Next</a>;\n        }\n        return originalElement;\n      }\n    const onChangeDis = e =>{\n        let data = {pageSize: 0, offset: 0,constituencyid: constituencyid,region: regionid, gender: genders,type: e,  regionalconstituncy: rconstid, politicalpartyid: politicalpartyid, disability: e}\n        setDisability(e)\n       apiGetter(data)\n    }\n    const onChangeConst = e => {\n        let data = {pageSize: 0, offset: 0,constituencyid: constituencyid,region: regionid, gender: genders,type: e.target.value,  regionalconstituncy: rconstid, politicalpartyid: politicalpartyid, disability: disability}\n       setType(e.target.value)\n       setElectionType(e.target.value)\n       apiGetter(data)\n       getRConstituency(regionid)\n\n      };\n\n    const onSelectConstId = (value) =>{\n        let data = {pageSize: 0, offset: 0,constituencyid: value,region: regionid, type: 'hopr_max', gender: genders,type: type,  regionalconstituncy: rconstid, politicalpartyid: politicalpartyid, disability: disability}\n        apiGetter(data)\n        setConstituencyid(value)\n        getRConstituency(regionid)\n        \n    }\n\n    const onSelectParty = (value) =>{\n        let data = {pageSize: 0, offset: 0,constituencyid: constituencyid,region: regionid, type: electiontype, gender: genders,type: type,  regionalconstituncy: rconstid, politicalpartyid: value, disability: disability}\n        apiGetter(data)\n        setPoliticalpartyId(value)\n    }\n    const onSelectRConstID = (value) =>{\n        let data = {pageSize: 0, offset: 0,constituencyid: constituencyid,region: regionid, type: 'hopr_max', gender: genders,type: type,  regionalconstituncy: value, politicalpartyid: politicalpartyid, disability: disability}\n        apiGetter(data)\n        setRConstId(value)\n    }\n    const onGenderChange = (value) =>{\n        setGender(value)\n        let data = {pageSize: 0, offset: 0,constituencyid: constituencyid,region: regionid, type: 'hopr_max', gender: value,type: type,  regionalconstituncy: '', politicalpartyid: politicalpartyid, disability: disability}\n        apiGetter(data)\n    }\n    const onSelectRegion = (value) =>{\n        setRegionid(value)\n        let data = {pageSize: 0, offset: 0,constituencyid: constituencyid,region: value, type: electiontype, gender: genders,type: type,  regionalconstituncy: '', politicalpartyid: politicalpartyid, disability: disability}\n        apiGetter(data)\n        getConstituency(value)\n        getRConstituency(value)\n\n    }\n\n\n    useEffect(() =>{\n        let data = {pageSize: pageSizes, offset: offset,constituencyid: '',region: '', type: '', gender: '', regionalconstituncy: '', politicalpartyid: '',  disability: 3}\n        apiGetter(data)\n        getParty()\n        \n    }, [pageSizes])\n    return (\n        <div>\n            <div>\n                <div style={{ display: 'flex', flexDirection: 'row', color: '#1de9b6', padding: 5 }}>\n                    <p style={{ marginRight: 20 }}>Election Type</p>\n                    <Radio.Group onChange={onChangeConst} buttonStyle=\"solid\">\n                        <Radio value={1}>HOPR</Radio>\n                        <Radio value={2}>RC</Radio>\n                    </Radio.Group>\n                </div>\n                <div\n                    style={{\n                        display: 'flex',\n                        flexDirection: 'row',\n                        justifyContent: 'space-between',\n                        width: '50%',\n                        marginBottom: 30,\n                        marginTop: 20\n                    }}\n                >\n                    <Select\n                        style={{ width: 200, marginRight: 20 }}\n                        placeholder=\"Search By Region\"\n                        onChange={onSelectRegion}\n                    >\n                        <Option value=\"0\">HQ</Option>\n                        <Option value=\"21\">Addis Ababa</Option>\n                        <Option value=\"22\">Afar</Option>\n                        <Option value=\"23\">Amhara</Option>\n                        <Option value=\"24\">Benishangul Gumuz</Option>\n                        <Option value=\"25\">Dire Dawa Astedadar</Option>\n                        <Option value=\"26\">Gambela</Option>\n                        <Option value=\"27\">Hareri</Option>\n                        <Option value=\"28\">Oromiya</Option>\n                        <Option value=\"29\">Sidama</Option>\n                        <Option value=\"30\">SNNP</Option>\n                        <Option value=\"31\">Somali</Option>\n                    </Select>\n                    <Select\n                        showSearch\n                        style={{ width: 200, marginRight: 20 }}\n                        placeholder=\"Constituency\"\n                        optionFilterProp=\"children\"\n                        onChange={onSelectConstId}\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                        filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\n                    >\n                        {constituency.map((item, index) =>(\n                            <Option key={index} value={item.constituencyid}>{item.constituencyname}</Option>\n                        ))}\n                    </Select>\n                    {electiontype == 2  ? \n                    <Select\n                        showSearch\n                        style={{ width: 200,  marginRight: 20 }}\n                        placeholder=\"Regional Constituency\"\n                        optionFilterProp=\"children\"\n                        onChange={onSelectRConstID}\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                        filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\n                    >\n                        {regionalconstituncy.map((item, index) =>(\n                            <Option key={index} value={item.regionalconstituencyid}>{item.regionalconstituencyname}</Option>\n                        ))}\n                    </Select> : <Select\n                        showSearch\n                        disabled\n                        style={{ width: 200,  marginRight: 20 }}\n                        placeholder=\"Regional Constituency\"\n                        optionFilterProp=\"children\"\n                        onChange={onSelectConstId}\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                        filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\n                    >\n                        {constituency.map((item, index) =>(\n                            <Option key={index} value={item.constituencyid}>{item.constituencyname}</Option>\n                        ))}\n                    </Select>}\n                    <Select\n                        showSearch\n                        style={{ width: 200,  marginRight: 20 }}\n                        placeholder=\"Political Party\"\n                        optionFilterProp=\"children\"\n                        onChange={onSelectParty}\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                        filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\n                    >\n                        {politicalparty.map((item, index) =>(\n                            <Option key={index} value={item.politicalpartyid}>{item.politicalpartyname}</Option>\n                        ))}\n                    </Select>\n\n                    <Select\n                        style={{ width: 200,  marginRight: 20 }}\n                        onChange={onGenderChange}\n                        placeholder=\"Gender\"\n                    >\n                        <Option value=\"MALE\">MALE</Option>\n                        <Option value=\"FEMALE\">FEMALE</Option>\n                    </Select>\n                    <Select\n                        style={{ width: 200,  marginRight: 100 }}\n                        onChange={onChangeDis}\n                        placeholder=\"Disability\"\n                    >\n                        <Option value={1}>Disabled</Option>\n                        <Option value={0}>Not disabled</Option>\n                    </Select>\n                    <button style={{fontSize: 12, backgroundColor: '#007bff', borderWidth: 0, marginLeft: 10, color: 'white'}} onClick={handlePrint}>Print</button>\n                    <ExportCSV csvData={cand_to_xl} fileName=\"candidates\" />\n\n                </div>\n            </div>\n\n            <Table ref={componentRef} loading={loading} pagination={{ position: [], pageSize: pageSizes }} style={{ marginTop: 10 }} columns={columns} dataSource={candidates} />\n            <br />\n            <Pagination onChange={onPageChange} onShowSizeChange={onSizetoShowChange} defaultCurrent={1} current={currentPage} total={totalPage} itemRender={itemRender}/>\n        </div>\n    );\n}\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Table, Select, Input, Button, Space, Radio, Pagination } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { API_SERVER1 } from './../../../config/constant';\nimport { useReactToPrint } from 'react-to-print';\nimport { SearchOutlined } from '@ant-design/icons';\n\nconst { Option } = Select;\n\nconst data = [\n    {\n        key: '1',\n        name: 'John Brown',\n        age: 32,\n        address: 'New York No. 1 Lake Park'\n    },\n    {\n        key: '2',\n        name: 'Joe Black',\n        age: 42,\n        address: 'London No. 1 Lake Park'\n    },\n    {\n        key: '3',\n        name: 'Jim Green',\n        age: 32,\n        address: 'Sidney No. 1 Lake Park'\n    },\n    {\n        key: '4',\n        name: 'Jim Red',\n        age: 32,\n        address: 'London No. 2 Lake Park'\n    }\n];\n\nexport default function PollingStation() {\n    const [searchText, setSearchText] = useState();\n    const [searchedColumn, setSearchedColumn] = useState('');\n    var [searchInput, setSearchInput] = useState('');\n    var [loading, setLoading] = useState(false)\n    var [next, setNext] = useState('')\n    var [back, setBack] = useState('')\n    var [totalPage, setTotalPage] = useState(0)\n    var [currentPage, setCurrentPage] = useState(1)\n    var [pageSizes, setPagesizes] = useState(10)\n    var [offset, setOffset] = useState(10)\n    let [constituencyid, setConstituencyid] = useState(' ')\n    let [genders, setGender] = useState(' ')\n    let [regionid, setRegionid] = useState(' ')\n    let [type, setType] = useState(' ')\n    const [candidates, setCandidates] = useState([])\n    const [constituency, setConstituency] = useState([])\n    const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n    const getConstituency = async() =>{\n        try {\n            const response = await fetch(API_SERVER1+`data/read/constituency/`)\n            const res = await response.json()\n            setConstituency(res)\n            \n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    \n\n    const apiGetter = async(pageS, off, dat, gen, region, types) =>{\n        try {\n            const response = await fetch(API_SERVER1+`data/read/pstation/?limit=${pageS}&offset=${off}&search=${dat}+${gen}`)\n            const res = await response.json()\n            setCandidates(res.results)\n            console.log(res.results)\n            setTotalPage(res.count)\n            setNext(res.next)\n            setBack(res.back)\n            setLoading(false)\n            \n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const apiGetterOnChange = async(url, action) =>{\n        try {\n            const response = await fetch(url)\n            const res = await response.json()\n            setCandidates(res.results)\n            setTotalPage(res.count)\n            if(action == 'next'){\n                setCurrentPage(currentPage+1)\n            }\n            else if (action == 'back'){\n                setCurrentPage(currentPage-1)\n            }\n            setNext(res.next)\n            setBack(res.previous)            \n        } catch (error) {\n            alert('Network Error')\n        }\n    }\n\n\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\n        confirm();\n\n        setSearchText(selectedKeys[0]);\n        setSearchedColumn(dataIndex);\n    };\n\n    const handleReset = (clearFilters) => {\n        clearFilters();\n        setSearchText('');\n    };\n    const getColumnSearchProps = (dataIndex) => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    ref={(node) => {\n                        searchInput = node;\n                    }}\n                    placeholder={`Search ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{ marginBottom: 8, display: 'block' }}\n                />\n                <Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                        icon={<SearchOutlined />}\n                        size=\"small\"\n                        style={{ width: 90 }}\n                    >\n                        Search\n                    </Button>\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                        Reset\n                    </Button>\n                    <Button\n                        type=\"link\"\n                        size=\"small\"\n                        onClick={() => {\n                            confirm({ closeDropdown: false });\n                            setSearchText(selectedKeys[0]);\n                            setSearchedColumn(dataIndex);\n                        }}\n                    >\n                        Filter\n                    </Button>\n                </Space>\n            </div>\n        ),\n        filterIcon: (filtered) => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value, record) => (record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : ''),\n        onFilterDropdownVisibleChange: (visible) => {\n            if (visible) {\n                setTimeout(() => searchInput.select(), 100);\n            }\n        },\n\n        render: (text) =>\n            searchedColumn === dataIndex ? (\n                <Highlighter\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                    searchWords={[searchText]}\n                    autoEscape\n                    textToHighlight={text ? text.toString() : ''}\n                />\n            ) : (\n                text\n            )\n    });\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'voterpollingstationname',\n            key: 'voterpollingstationname',\n            width: '20%',\n            ...getColumnSearchProps('name')\n        },\n        {\n            title: 'Code',\n            dataIndex: 'voterpollingstationcode',\n            key: 'voterpollingstationcode',\n            width: '10%',\n            ...getColumnSearchProps('gender')\n        },\n        {\n            title: 'Constituency',\n            dataIndex: 'constituencyid',\n            key: 'constituencyid',\n            width: '20%',\n            ...getColumnSearchProps('gender')\n        },\n        {\n            title: 'Regional Constituncy',\n            dataIndex: 'constituencyid',\n            key: 'constituencyid',\n            width: '20%',\n            ...getColumnSearchProps('gender')\n        },\n        {\n            title: 'Region',\n            dataIndex: 'region',\n            key: 'placeofbirthid',\n            width: '20%',\n            ...getColumnSearchProps('placeofbirthid'),\n            sorter: (a, b) => a.address.length - b.address.length,\n            sortDirections: ['descend', 'ascend']\n        }\n    ];\n    const onPageChange = (page, pageSize) =>{\n        setLoading(true)\n        apiGetter(pageSize, page*pageSize, constituencyid, regionid, type)\n        setCurrentPage(page)\n    }\n    const onSizetoShowChange = (current, size) =>{\n        console.log(current, size)\n        setPagesizes(size)\n        apiGetter(size, 0, constituencyid, genders, regionid, type)\n    }\n\n    function itemRender(current, type, originalElement) {\n        if (type === 'prev') {\n          return <a onClick={() =>apiGetterOnChange(back, 'back')}>Previous</a>;\n        }\n        if (type === 'next') {\n          return <a onClick={() =>apiGetterOnChange(next, 'next')}>Next</a>;\n        }\n        return originalElement;\n      }\n\n    const onChangeConst = e => {\n        console.log('radio checked', e.target.value);\n       setType(e.target.value)\n       apiGetter(0,0,constituencyid, regionid, type)\n\n      };\n\n    const onSelectConstId = (value) =>{\n        apiGetter(0, 0, value, genders)\n        setConstituencyid(value)\n    }\n    const onGenderChange = (value) =>{\n        setGender(value)\n        apiGetter(0,0,constituencyid, value, regionid, type)\n    }\n    const onSelectRegion = (value) =>{\n        setRegionid(value)\n        apiGetter(0,0,constituencyid, value, regionid, type)\n\n    }\n\n\n    useEffect(() =>{\n        apiGetter(pageSizes, offset, '', '', '', '')\n        getConstituency()\n    }, [pageSizes])\n    return (\n        <div>\n            <div>\n                <div\n                    style={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        justifyContent: 'space-between',\n                        width: 500,\n                        marginBottom: 20,\n                        marginTop: 30\n                    }}\n                >\n                        <h4>Filter Candidate By</h4>\n                    </div>\n                    <div style={{ display: 'flex', flexDirection: 'row' , color: '#1de9b6', padding: 5}}>\n                        <p style={{ marginRight: 20 }}>Election Type</p>\n                        <Radio.Group onChange={onChangeConst} buttonStyle=\"solid\">\n                            <Radio value=\"a\">HOPR</Radio>\n                            <Radio value=\"b\">RC</Radio>\n                        </Radio.Group>\n                    </div>\n                 <div\n                    style={{\n                        display: 'flex',\n                        flexDirection: 'row',\n                        justifyContent: 'space-between',\n                        width: '50%',\n                        marginBottom: 20,\n                        marginTop: 20\n                    }}\n                >\n                     <Select\n                        style={{ width: 200 }}\n                        placeholder=\"Search By Region\"\n                        onChange={onSelectRegion}\n                    >\n                        <Option value=\"0\">HQ</Option>\n                        <Option value=\"21\">Addis Ababa</Option>\n                        <Option value=\"22\">Afar</Option>\n                        <Option value=\"23\">Amhara</Option>\n                        <Option value=\"24\">Benishangul Gumuz</Option>\n                        <Option value=\"25\">Dire Dawa Astedadar</Option>\n                        <Option value=\"26\">Gambela</Option>\n                        <Option value=\"27\">Hareri</Option>\n                        <Option value=\"28\">Oromiya</Option>\n                        <Option value=\"29\">Sidama</Option>\n                        <Option value=\"30\">SNNP</Option>\n                        <Option value=\"31\">Somali</Option>\n                    </Select>\n                    <Select\n                        showSearch\n                        style={{ width: 200 }}\n                        placeholder=\"Constituency\"\n                        optionFilterProp=\"children\"\n                        onChange={onSelectConstId}\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                        filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\n                    >\n                        {constituency.map((item, index) =>(\n                            <Option key={index} value={item.constituencyid}>{item.constituencyname}</Option>\n                        ))}\n                    </Select>\n                    <button style={{fontSize: 12, backgroundColor: '#007bff', borderWidth: 0, marginLeft: 10, color: 'white'}} onClick={handlePrint}>Print</button>\n                </div>\n            </div>\n\n            <Table ref={componentRef} loading={loading} pagination={{ position: [], pageSize: pageSizes }} style={{ marginTop: 10 }} columns={columns} dataSource={candidates} />\n            <Pagination onChange={onPageChange} onShowSizeChange={onSizetoShowChange} defaultCurrent={1} current={currentPage} total={totalPage} itemRender={itemRender}/>        </div>\n    );\n}\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Table, Select, Input, Button, Space, Radio, Pagination } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { API_SERVER1 } from './../../config/constant';\nimport { useReactToPrint } from 'react-to-print';\nimport { SearchOutlined } from '@ant-design/icons';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\n\n\nconst { Option } = Select;\n\nconst ExportCSV = ({csvData, fileName}) => {\n\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const fileExtension = '.xlsx';\n\n    const exportToCSV = (csvData, fileName) => {\n        const ws = XLSX.utils.json_to_sheet(csvData);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], {type: fileType});\n        FileSaver.saveAs(data, fileName + fileExtension);\n    }\n\n    return (\n        <button style={{fontSize: 12, backgroundColor: '#007bff', borderWidth: 0, marginLeft: 10, color: 'white', width: 100}}  onClick={(e) => exportToCSV(csvData,fileName)}>Excel</button>\n    )\n}\n\n\nexport default function Winners() {\n    const [searchText, setSearchText] = useState();\n    const [searchedColumn, setSearchedColumn] = useState('');\n    var [searchInput, setSearchInput] = useState('');\n    var [loading, setLoading] = useState(false)\n    let [politicalpartyid, setPoliticalpartyId] = useState('')\n    var [next, setNext] = useState('')\n    var [back, setBack] = useState('')\n    var [totalPage, setTotalPage] = useState(0)\n    var [currentPage, setCurrentPage] = useState(1)\n    var [pageSizes, setPagesizes] = useState(10)\n    var [offset, setOffset] = useState(10)\n    let [constituencyid, setConstituencyid] = useState('')\n    let [genders, setGender] = useState('')\n    let [regionid, setRegionid] = useState('')\n    let [url, setUrl] = useState('hopr_max')\n    let [type, setType] = useState('')\n    let [rconstid, setRConstId] = useState('')\n    let [disability, setDisability] = useState(3)\n    const [cand_to_xl, setXL] = useState([])\n    const [regionalconstituncy, setRegionalConstituency] = useState([])\n    let [electiontype, setElectionType] = useState('hopr_max')\n    const [politicalparty, setPoliticalparty] = useState([])\n    const [candidates, setCandidates] = useState([])\n    const [constituency, setConstituency] = useState([])\n    const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  const getConstituency = async(value) =>{\n    try {\n        const response = await fetch(API_SERVER1+`data/read/constituency/?search=${value}`)\n        const res = await response.json()\n        setConstituency(res)\n        \n    } catch (error) {\n        console.log(error)\n    }\n}\nconst getRConstituency = async(value) =>{\n    try {\n        const response = await fetch(API_SERVER1+`data/read/rconstitunecy/?search=${value}`)\n        const res = await response.json()\n        setRegionalConstituency(res)\n        \n    } catch (error) {\n        console.log(error)\n    }\n}\n    const getParty = async() =>{\n        try {\n            const response = await fetch(API_SERVER1+`data/read/party_list/`)\n            const res = await response.json()\n            setPoliticalparty(res)\n            \n        } catch (error) {\n            console.log(error)\n        }\n    }\n    \n\n    const apiGetter = async(data) =>{\n        try {\n            const response = await fetch(API_SERVER1+`data/read/${data.type}/${data.disability}/?limit=${data.pageSize}&offset=${data.offset}&search=${data.region}+${data.constituencyid}+${data.gender}+${data.politicalpartyid}`)\n            const res = await response.json()\n            setCandidates(res.results)\n            prepareXL(res.results)\n            setTotalPage(res.count)\n            setNext(res.next)\n            setBack(res.back)\n            setLoading(false)\n            \n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const apiGetterOnChange = async(url, action) =>{\n        try {\n            const response = await fetch(url)\n            const res = await response.json()\n            setCandidates(res.results)\n            setTotalPage(res.count)\n            if(action == 'next'){\n                setCurrentPage(currentPage+1)\n            }\n            else if (action == 'back'){\n                setCurrentPage(currentPage-1)\n            }\n            setNext(res.next)\n            setBack(res.previous)            \n        } catch (error) {\n            alert('Network Error')\n        }\n    }\n\n    const prepareXL = (data) =>{\n        let obj = {}\n        var cand = []\n        console.log('data is', data)\n        data.map((candidates, index) =>{\n            console.log('view', candidates)\n            // obj = {\n            //     region: candidates.result.general.region.regionname,\n            //     // constituency: candidates.result.general.hoprconstituency.constituencyname,\n            //     // regional_constituency: candidates.result.regionalconstituencyid.regionalconstituencyname,\n            //     disability: candidates.result.candidate.disability,\n            //     politicalparty: candidates.result.party.politicalpartyname,\n            //     address: candidates.result.candidate.addressid,\n            //     gender: candidates.result.candidate.gender,\n                \n            // }\n            if(candidates.result.candidate.electionid.electionid == 1){\n                obj = {\n                    region: candidates.result.general.region.regionname,\n                    constituency: candidates.result.general.hoprconstituency.constituencyname,\n                    // regional_constituency: candidates.result.regionalconstituencyid.regionalconstituencyname,\n                    disability: candidates.result.candidate.disability,\n                    politicalparty: candidates.result.party.politicalpartyname,\n                    address: candidates.result.candidate.addressid,\n                    gender: candidates.result.candidate.gender,\n                    \n                }\n            } else if (candidates.result.candidate.electionid.electionid == 2){\n                obj = {\n                    region: candidates.result.general.region.regionname,\n                    // constituency: candidates.result.general.hoprconstituency.constituencyname,\n                    regional_constituency: candidates.result.regionalconstituencyid.regionalconstituencyname,\n                    disability: candidates.result.candidate.disability,\n                    politicalparty: candidates.result.party.politicalpartyname,\n                    address: candidates.result.candidate.addressid,\n                    gender: candidates.result.candidate.gender,\n                    \n                }\n            }\n            cand.push(obj)\n        })\n        console.log('data is ', cand)\n        setXL(cand)\n        \n    }\n\n   \n    const columns = [\n        {\n            title: 'Full Name',\n            dataIndex: 'result',\n            key: 'result',\n            width: '20%',\n            render: (text, record) => (\n                <div size=\"middle\">\n                  {text.candidate.fullname}\n                </div>\n              ),\n        },\n        {\n            title: 'Gender',\n            dataIndex: 'result',\n            key: 'result',\n            width: '10%',\n            render: (text, record) => (\n                <div size=\"middle\">\n                  {text.candidate.gender}\n                </div>\n              ),\n        },\n        {\n            title: 'Constituency',\n            dataIndex: 'result',\n            key: 'result',\n            width: '20%',\n            render: (text, record) => (\n                <div size=\"middle\">\n                  {text.candidate.constituencyid.constituencyname}\n                </div>\n              ),\n        },\n        {\n            title: 'Regional Constituncy',\n            dataIndex: 'result',\n            key: 'result',\n            width: '20%',\n            render: (text, record) => (\n                <div size=\"middle\">\n                  {text.candidate.regionalconstituencyid ? <div>{text.candidate.regionalconstituencyid.regionalconstituencyname}</div> : null}\n                </div>\n              ),\n        },\n        {\n            title: 'Party',\n            dataIndex: 'result',\n            key: 'result',\n            width: '14%',\n            render: (text, record) => (\n                <div size=\"middle\">\n                  {text.party.politicalpartyname}\n                </div>\n              ),\n        \n        },\n        {\n            title: 'Region',\n            dataIndex: 'result',\n            key: 'result',\n            width: '20%',\n            render: (text, record) => (\n                <div size=\"middle\">\n                  {text.general.region.regionname}\n                </div>\n              ),\n\n        }\n    ];\n    const onPageChange = (page, pageSize) =>{\n        setLoading(true)\n        let data = {pageSize: pageSize, offset: page*pageSize,constituencyid: constituencyid,region: regionid,gender: genders,  type: electiontype, regionalconstituncy: rconstid, politicalpartyid: politicalpartyid, disability: disability}\n        apiGetter(data)\n        setCurrentPage(page)\n    }\n    const onSizetoShowChange = (current, size) =>{\n        console.log(current, size)\n        let data = {pageSize: size, offset: 0,constituencyid: constituencyid,region: regionid, gender: genders, type: electiontype, regionalconstituncy: rconstid, politicalpartyid: politicalpartyid, disability: disability}\n        setPagesizes(size)\n        apiGetter(data)\n    }\n\n    function itemRender(current, type, originalElement) {\n        if (type === 'prev') {\n          return <a onClick={() =>apiGetterOnChange(back, 'back')}>Previous</a>;\n        }\n        if (type === 'next') {\n          return <a onClick={() =>apiGetterOnChange(next, 'next')}>Next</a>;\n        }\n        return originalElement;\n      }\n\n    const onChangeConst = e => {\n       setType(e.target.value)\n       console.log(e.target.value)\n       if (e.target.value == 1){\n           console.log(url)\n           let data = {pageSize: 0, offset: 0,constituencyid: constituencyid,region: regionid, gender: genders, type: 'hopr_max', regionalconstituncy: rconstid, politicalpartyid: politicalpartyid, disability: disability}\n           apiGetter(data)\n        setUrl('hopr_max')\n       } else if (e.target.value == 2){\n           setElectionType('rc_max')\n           let data = {pageSize: 0, offset: 0,constituencyid: constituencyid,region: regionid, gender: genders, type: 'rc_max', regionalconstituncy: rconstid, politicalpartyid: politicalpartyid, disability: disability}\n           apiGetter(data)\n       }\n\n       \n\n      };\n      const onSelectRConstID = (value) =>{\n        let data = {pageSize: 0, offset: 0,constituencyid: constituencyid,region: regionid, type: electiontype, gender: genders,type: type,  regionalconstituncy: value, politicalpartyid: politicalpartyid, disability: disability}\n        apiGetter(data)\n        setRConstId(value)\n    }\n\n    const onSelectConstId = (value) =>{\n        let data = {pageSize: 0, offset: 0,constituencyid: value,region: regionid, gender: genders,  type: electiontype, regionalconstituncy: '', politicalpartyid: politicalpartyid, disability: disability}\n        apiGetter(data)\n        setConstituencyid(value)\n    }\n    const onGenderChange = (value) =>{\n        setGender(value)\n        let data = {pageSize: 0, offset: 0,constituencyid: constituencyid,region: regionid, gender: value,  type: electiontype, regionalconstituncy: rconstid, politicalpartyid: politicalpartyid, disability: disability}\n        apiGetter(data)\n    }\n    const onSelectParty = (value) =>{\n        let data = {pageSize: 0, offset: 0,constituencyid: constituencyid,region: regionid, type: electiontype, gender: genders,  regionalconstituncy: rconstid, politicalpartyid: value, disability: disability}\n        apiGetter(data)\n        setPoliticalpartyId(value)\n    }\n    const onSelectRegion = (value) =>{\n \n        setRegionid(value)\n        let data = {pageSize: 0, offset: 0,constituencyid: constituencyid,region: value, type: electiontype, gender: genders, regionalconstituncy: rconstid, politicalpartyid: value, disability: disability}\n        apiGetter(data)\n        getConstituency(value)\n        getRConstituency(value)\n\n    }\n    const onChangeDis = e =>{\n        let data = {pageSize: 0, offset: 0,constituencyid: constituencyid,region: regionid, gender: genders,type: electiontype,  regionalconstituncy: rconstid, politicalpartyid: politicalpartyid, disability: e}\n        setDisability(e)\n       apiGetter(data)\n    }\n\n    useEffect(() =>{\n        let data = {pageSize: 0, offset: 0,constituencyid: '',region: '', type: 'hopr_max', gender: '', regionalconstituncy: '',  politicalpartyid: '', disability: 3}\n        apiGetter(data)\n        getConstituency('')\n        getRConstituency('')\n        getParty()\n    }, [pageSizes])\n    return (\n        <div>\n            <div style={{ display: 'flex', flexDirection: 'row', color: '#1de9b6', padding: 5 }}>\n                <p style={{ marginRight: 20 }}>Election Type</p>\n                <Radio.Group defaultValue={1} onChange={onChangeConst} buttonStyle=\"solid\">\n                    <Radio value={1}>HOPR</Radio>\n                    <Radio value={2}>RC</Radio>\n                </Radio.Group>\n            </div>\n            <div\n                style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    width: '50%',\n                    marginBottom: 30,\n                    marginTop: 20\n                }}\n            >\n               <Select\n                        style={{ width: 200 }}\n                        placeholder=\"Search By Region\"\n                        onChange={onSelectRegion}\n                    >\n                        <Option value=\"0\">HQ</Option>\n                        <Option value=\"21\">Addis Ababa</Option>\n                        <Option value=\"22\">Afar</Option>\n                        <Option value=\"23\">Amhara</Option>\n                        <Option value=\"24\">Benishangul Gumuz</Option>\n                        <Option value=\"25\">Dire Dawa Astedadar</Option>\n                        <Option value=\"26\">Gambela</Option>\n                        <Option value=\"27\">Hareri</Option>\n                        <Option value=\"28\">Oromiya</Option>\n                        <Option value=\"29\">Sidama</Option>\n                        <Option value=\"30\">SNNP</Option>\n                        <Option value=\"31\">Somali</Option>\n                    </Select>\n                    <Select\n                        showSearch\n                        style={{ width: 200 }}\n                        placeholder=\"Constituency\"\n                        optionFilterProp=\"children\"\n                        onChange={onSelectConstId}\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                        filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\n                    >\n                        {constituency.map((item, index) =>(\n                            <Option key={index} value={item.constituencyid}>{item.constituencyname}</Option>\n                        ))}\n                    </Select>\n                    {electiontype == 2  ? \n                    <Select\n                        showSearch\n                        style={{ width: 200 }}\n                        placeholder=\"Regional Constituency\"\n                        optionFilterProp=\"children\"\n                        onChange={onSelectRConstID}\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                        filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\n                    >\n                        {regionalconstituncy.map((item, index) =>(\n                            <Option key={index} value={item.regionalconstituencyid}>{item.regionalconstituencyname}</Option>\n                        ))}\n                    </Select> : null}\n                    <Select\n                        showSearch\n                        style={{ width: 200, marginLeft: 10 }}\n                        placeholder=\"Political Party\"\n                        optionFilterProp=\"children\"\n                        onChange={onSelectParty}\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                        filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\n                    >\n                        {politicalparty.map((item, index) =>(\n                            <Option key={index} value={item.politicalpartyid}>{item.politicalpartyname}</Option>\n                        ))}\n                    </Select>\n                    <Select\n                        style={{ width: 200 }}\n                        onChange={onGenderChange}\n                        placeholder=\"Gender\"\n                    >\n                        <Option value=\"MALE\">MALE</Option>\n                        <Option value=\"FEMALE\">FEMALE</Option>\n                    </Select>\n                    <Select\n                        style={{ width: 200 }}\n                        onChange={onChangeDis}\n                        placeholder=\"Disability\"\n                    >\n                        <Option value={1}>Disabled</Option>\n                        <Option value={0}>Not disabled</Option>\n                    </Select>\n                    <button style={{fontSize: 12, backgroundColor: '#007bff', borderWidth: 0, marginLeft: 10, color: 'white'}} onClick={handlePrint}>Print</button>\n                    <ExportCSV csvData={cand_to_xl} fileName=\"candidates\" />\n            </div>\n            <Table ref={componentRef} loading={loading} pagination={{ position: [], pageSize: pageSizes }} style={{ marginTop: 10 }} columns={columns} dataSource={candidates} />\n            <br/>\n            <Pagination onChange={onPageChange} onShowSizeChange={onSizetoShowChange} defaultCurrent={1} current={currentPage} total={totalPage} itemRender={itemRender}/>\n        </div>\n    );\n}\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Table, Select, Input, Button, Space, Radio, Pagination } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { API_SERVER1 } from './../../config/constant';\nimport { useReactToPrint } from 'react-to-print';\nimport { SearchOutlined } from '@ant-design/icons';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\n\n\nconst { Option } = Select;\n\nconst ExportCSV = ({csvData, fileName}) => {\n\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const fileExtension = '.xlsx';\n\n    const exportToCSV = (csvData, fileName) => {\n        const ws = XLSX.utils.json_to_sheet(csvData);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], {type: fileType});\n        FileSaver.saveAs(data, fileName + fileExtension);\n    }\n\n    return (\n        <button style={{fontSize: 12, backgroundColor: '#007bff', borderWidth: 0, marginLeft: 10, color: 'white', width: 100}}  onClick={(e) => exportToCSV(csvData,fileName)}>Excel</button>\n    )\n}\n\n\nexport default function Result() {\n    const [searchText, setSearchText] = useState();\n    const [searchedColumn, setSearchedColumn] = useState('');\n    var [searchInput, setSearchInput] = useState('');\n    var [loading, setLoading] = useState(false)\n    let [politicalpartyid, setPoliticalpartyId] = useState('')\n    var [next, setNext] = useState('')\n    var [back, setBack] = useState('')\n    var [totalPage, setTotalPage] = useState(0)\n    var [currentPage, setCurrentPage] = useState(1)\n    var [pageSizes, setPagesizes] = useState(10)\n    var [offset, setOffset] = useState(10)\n    let [constituencyid, setConstituencyid] = useState('')\n    let [genders, setGender] = useState('')\n    let [regionid, setRegionid] = useState('')\n    let [url, setUrl] = useState('result_hopr')\n    let [type, setType] = useState('')\n    let [rconstid, setRConstId] = useState('')\n    let [disability, setDisability] = useState(3)\n    const [cand_to_xl, setXL] = useState([])\n    const [regionalconstituncy, setRegionalConstituency] = useState([])\n    let [electiontype, setElectionType] = useState('result_hopr')\n    const [politicalparty, setPoliticalparty] = useState([])\n    const [candidates, setCandidates] = useState([])\n    const [constituency, setConstituency] = useState([])\n    const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  const getConstituency = async(value) =>{\n    try {\n        const response = await fetch(API_SERVER1+`data/read/constituency/?search=${value}`)\n        const res = await response.json()\n        setConstituency(res)\n        \n    } catch (error) {\n        console.log(error)\n    }\n}\nconst getRConstituency = async(value) =>{\n    try {\n        const response = await fetch(API_SERVER1+`data/read/rconstitunecy/?search=${value}`)\n        const res = await response.json()\n        setRegionalConstituency(res)\n        \n    } catch (error) {\n        console.log(error)\n    }\n}\n    const getParty = async() =>{\n        try {\n            const response = await fetch(API_SERVER1+`data/read/party_list/`)\n            const res = await response.json()\n            setPoliticalparty(res)\n            \n        } catch (error) {\n            console.log(error)\n        }\n    }\n    \n\n    const apiGetter = async(data) =>{\n        try {\n            const response = await fetch(API_SERVER1+`data/read/${data.type}/${data.disability}/?limit=${data.pageSize}&offset=${data.offset}&search=${data.region}+${data.constituencyid}+${data.gender}+${data.politicalpartyid}`)\n            const res = await response.json()\n            console.log(res)\n            setCandidates(res.results)\n            prepareXL(res.results)\n            setTotalPage(res.count)\n            setNext(res.next)\n            setBack(res.back)\n            setLoading(false)\n            \n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const apiGetterOnChange = async(url, action) =>{\n        try {\n            const response = await fetch(url)\n            const res = await response.json()\n            setCandidates(res.results)\n            setTotalPage(res.count)\n            if(action == 'next'){\n                setCurrentPage(currentPage+1)\n            }\n            else if (action == 'back'){\n                setCurrentPage(currentPage-1)\n            }\n            setNext(res.next)\n            setBack(res.previous)            \n        } catch (error) {\n            alert('Network Error')\n        }\n    }\n\n    const prepareXL = (data) =>{\n        let obj = {}\n        var cand = []\n        console.log('data is', data)\n        data.map((candidates, index) =>{\n            console.log('view', candidates)\n            // obj = {\n            //     region: candidates.result.general.region.regionname,\n            //     // constituency: candidates.result.general.hoprconstituency.constituencyname,\n            //     // regional_constituency: candidates.result.regionalconstituencyid.regionalconstituencyname,\n            //     disability: candidates.result.candidate.disability,\n            //     politicalparty: candidates.result.party.politicalpartyname,\n            //     address: candidates.result.candidate.addressid,\n            //     gender: candidates.result.candidate.gender,\n                \n            // }\n            if(candidates.candidate.electionid.electionid == 1){\n                obj = {\n                    region: candidates.general.region.regionname,\n                    constituency: candidates.general.hoprconstituency.constituencyname,\n                    // regional_constituency: candidates.result.regionalconstituencyid.regionalconstituencyname,\n                    disability: candidates.candidate.disability,\n                    politicalparty: candidates.party.politicalpartyname,\n                    address: candidates.candidate.addressid,\n                    gender: candidates.candidate.gender,\n                    \n                }\n            } else if (candidates.candidate.electionid.electionid == 2){\n                obj = {\n                    region: candidates.general.region.regionname,\n                    // constituency: candidates.result.general.hoprconstituency.constituencyname,\n                    regional_constituency: candidates.regionalconstituencyid.regionalconstituencyname,\n                    disability: candidates.candidate.disability,\n                    politicalparty: candidates.party.politicalpartyname,\n                    address: candidates.candidate.addressid,\n                    gender: candidates.candidate.gender,\n                    \n                }\n            }\n            cand.push(obj)\n        })\n        console.log('data is ', cand)\n        setXL(cand)\n        \n    }\n\n   \n    const columns = [\n        {\n            title: 'Full Name',\n            dataIndex: 'candidate',\n            key: 'candidate',\n            width: '20%',\n            render: (text, record) => (\n                <div size=\"middle\">\n                  {text.fullname}\n                </div>\n              ),\n        },\n        {\n            title: 'Gender',\n            dataIndex: 'candidate',\n            key: 'candidate',\n            width: '10%',\n            render: (text, record) => (\n                <div size=\"middle\">\n                  {text.gender}\n                </div>\n              ),\n        },\n        {\n            title: 'Constituency',\n            dataIndex: 'candidate',\n            key: 'candidate',\n            width: '20%',\n            render: (text, record) => (\n                <div size=\"middle\">\n                  {text.constituencyid.constituencyname}\n                </div>\n              ),\n        },\n        {\n            title: 'Regional Constituncy',\n            dataIndex: 'candidate',\n            key: 'candidate',\n            width: '20%',\n            render: (text, record) => (\n                <div size=\"middle\">\n                  {text.regionalconstituencyid ? <div>{text.regionalconstituencyid.regionalconstituencyname}</div> : null}\n                </div>\n              ),\n        },\n        {\n            title: 'Party',\n            dataIndex: 'party',\n            key: 'party',\n            width: '14%',\n            render: (text, record) => (\n                <div size=\"middle\">\n                  {text.politicalpartyname}\n                </div>\n              ),\n        \n        },\n        {\n            title: 'Region',\n            dataIndex: 'general',\n            key: 'general',\n            width: '20%',\n            render: (text, record) => (\n                <div size=\"middle\">\n                  {text.region.regionname}\n                </div>\n              ),\n\n        },\n        {\n            title: 'Vote',\n            dataIndex: 'vote',\n            key: 'vote',\n            width: '20%',\n            render: (text) => (\n                <div size=\"middle\" style={{backgroundColor: '#3f4d67', color: 'white', padding: 10}}>\n                  {text}\n                </div>\n              ),\n\n        }\n    ];\n    const onPageChange = (page, pageSize) =>{\n        setLoading(true)\n        let data = {pageSize: pageSize, offset: page*pageSize,constituencyid: constituencyid,region: regionid,gender: genders,  type: electiontype, regionalconstituncy: rconstid, politicalpartyid: politicalpartyid, disability: disability}\n        apiGetter(data)\n        setCurrentPage(page)\n    }\n    const onSizetoShowChange = (current, size) =>{\n        console.log(current, size)\n        let data = {pageSize: size, offset: 0,constituencyid: constituencyid,region: regionid, gender: genders, type: electiontype, regionalconstituncy: rconstid, politicalpartyid: politicalpartyid, disability: disability}\n        setPagesizes(size)\n        apiGetter(data)\n    }\n\n    function itemRender(current, type, originalElement) {\n        if (type === 'prev') {\n          return <a onClick={() =>apiGetterOnChange(back, 'back')}>Previous</a>;\n        }\n        if (type === 'next') {\n          return <a onClick={() =>apiGetterOnChange(next, 'next')}>Next</a>;\n        }\n        return originalElement;\n      }\n\n    const onChangeConst = e => {\n       setType(e.target.value)\n       console.log(e.target.value)\n       if (e.target.value == 1){\n           console.log(url)\n           let data = {pageSize: 0, offset: 0,constituencyid: '',region: '', type: 'result_hopr', gender: '', regionalconstituncy: '',  politicalpartyid: '', disability: 3}\n           apiGetter(data)\n           setElectionType('result_hopr')\n        setUrl('result_hopr')\n       } else if (e.target.value == 2){\n           setElectionType('result_rc')\n           let data = {pageSize: 0, offset: 0,constituencyid: '',region: '', type: 'result_rc', gender: '', regionalconstituncy: '',  politicalpartyid: '', disability: 3}\n           apiGetter(data)\n       }\n\n       \n\n      };\n      const onSelectRConstID = (value) =>{\n        let data = {pageSize: 0, offset: 0,constituencyid: constituencyid,region: regionid, type: electiontype, gender: genders,type: type,  regionalconstituncy: value, politicalpartyid: politicalpartyid, disability: disability}\n        apiGetter(data)\n        setRConstId(value)\n    }\n\n    const onSelectConstId = (value) =>{\n        let data = {pageSize: 0, offset: 0,constituencyid: value,region: regionid, gender: genders,  type: electiontype, regionalconstituncy: '', politicalpartyid: politicalpartyid, disability: disability}\n        apiGetter(data)\n        setConstituencyid(value)\n    }\n    const onGenderChange = (value) =>{\n        setGender(value)\n        let data = {pageSize: 0, offset: 0,constituencyid: constituencyid,region: regionid, gender: value,  type: electiontype, regionalconstituncy: rconstid, politicalpartyid: politicalpartyid, disability: disability}\n        apiGetter(data)\n    }\n    const onSelectParty = (value) =>{\n        let data = {pageSize: 0, offset: 0,constituencyid: constituencyid,region: regionid, type: electiontype, gender: genders,  regionalconstituncy: rconstid, politicalpartyid: value, disability: disability}\n        apiGetter(data)\n        setPoliticalpartyId(value)\n    }\n    const onSelectRegion = (value) =>{\n \n        setRegionid(value)\n        let data = {pageSize: 0, offset: 0,constituencyid: constituencyid,region: value, type: electiontype, gender: genders, regionalconstituncy: rconstid, politicalpartyid: value, disability: disability}\n        apiGetter(data)\n        getConstituency(value)\n        getRConstituency(value)\n\n    }\n    const onChangeDis = e =>{\n        let data = {pageSize: 0, offset: 0,constituencyid: constituencyid,region: regionid, gender: genders,type: electiontype,  regionalconstituncy: rconstid, politicalpartyid: politicalpartyid, disability: e}\n        setDisability(e)\n       apiGetter(data)\n    }\n\n    useEffect(() =>{\n        let data = {pageSize: 0, offset: 0,constituencyid: '',region: '', type: 'result_hopr', gender: '', regionalconstituncy: '',  politicalpartyid: '', disability: 3}\n        apiGetter(data)\n        getConstituency('')\n        getRConstituency('')\n        getParty()\n    }, [pageSizes])\n    return (\n        <div>\n            <div style={{ display: 'flex', flexDirection: 'row', color: '#1de9b6', padding: 5 }}>\n                <p style={{ marginRight: 20 }}>Election Type</p>\n                <Radio.Group defaultValue={1} onChange={onChangeConst} buttonStyle=\"solid\">\n                    <Radio value={1}>HOPR</Radio>\n                    <Radio value={2}>RC</Radio>\n                </Radio.Group>\n            </div>\n            <div\n                style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    width: '100%',\n                    marginBottom: 30,\n                    marginTop: 20\n                }}\n            >\n               <Select\n                        style={{ width: '100%', marginRight: 10 }}\n                        placeholder=\"Search By Region\"\n                        onChange={onSelectRegion}\n                    >\n                        <Option value=\"0\">HQ</Option>\n                        <Option value=\"21\">Addis Ababa</Option>\n                        <Option value=\"22\">Afar</Option>\n                        <Option value=\"23\">Amhara</Option>\n                        <Option value=\"24\">Benishangul Gumuz</Option>\n                        <Option value=\"25\">Dire Dawa Astedadar</Option>\n                        <Option value=\"26\">Gambela</Option>\n                        <Option value=\"27\">Hareri</Option>\n                        <Option value=\"28\">Oromiya</Option>\n                        <Option value=\"29\">Sidama</Option>\n                        <Option value=\"30\">SNNP</Option>\n                        <Option value=\"31\">Somali</Option>\n                    </Select>\n                    {electiontype == 'result_hopr' ? \n                    <Select\n                    showSearch\n                    style={{ width: '100%' }}\n                    placeholder=\"Constituency\"\n                    optionFilterProp=\"children\"\n                    onChange={onSelectConstId}\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\n                >\n                    {constituency.map((item, index) =>(\n                        <Option key={index} value={item.constituencyid}>{item.constituencyname}</Option>\n                    ))}\n                </Select> : null}\n                    {electiontype == 'result_rc'  ? \n                    <Select\n                        showSearch\n                        style={{ width: '100%', marginRight: 10 }}\n                        placeholder=\"Regional Constituency\"\n                        optionFilterProp=\"children\"\n                        onChange={onSelectRConstID}\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                        filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\n                    >\n                        {regionalconstituncy.map((item, index) =>(\n                            <Option key={index} value={item.regionalconstituencyid}>{item.regionalconstituencyname}</Option>\n                        ))}\n                    </Select> : null}\n                    <Select\n                        showSearch\n                        style={{ width: '100vh', marginLeft: 10 }}\n                        placeholder=\"Political Party\"\n                        optionFilterProp=\"children\"\n                        onChange={onSelectParty}\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                        filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\n                    >\n                        {politicalparty.map((item, index) =>(\n                            <Option key={index} value={item.politicalpartyid}>{item.politicalpartyname}</Option>\n                        ))}\n                    </Select>\n                    <Select\n                        style={{ width: '100%',  marginLeft: 10 }}\n                        onChange={onGenderChange}\n                        placeholder=\"Gender\"\n                    >\n                        <Option value=\"MALE\">MALE</Option>\n                        <Option value=\"FEMALE\">FEMALE</Option>\n                    </Select>\n                    <Select\n                        style={{ width: '100%', marginLeft: 10 }}\n                        onChange={onChangeDis}\n                        placeholder=\"Disability\"\n                    >\n                        <Option value={1}>Disabled</Option>\n                        <Option value={0}>Not disabled</Option>\n                    </Select>\n                    <button style={{fontSize: 12, backgroundColor: '#007bff', borderWidth: 0, marginLeft: 10, color: 'white'}} onClick={handlePrint}>Print</button>\n                    <ExportCSV csvData={cand_to_xl} fileName=\"candidates\" />\n            </div>\n            <Table ref={componentRef} loading={loading} pagination={{ position: [], pageSize: pageSizes }} style={{ marginTop: 10 }} columns={columns} dataSource={candidates} />\n            <br/>\n            <Pagination onChange={onPageChange} onShowSizeChange={onSizetoShowChange} defaultCurrent={1} current={currentPage} total={totalPage} itemRender={itemRender}/>\n        </div>\n    );\n}\n","import React from 'react';\nimport Candidats from './Candidats';\nimport {Tabs} from 'antd'\nimport PollingStation from './PollingStation';\nimport Winners from '../Winners';\nimport Result from '../Result'\n\nconst { TabPane } = Tabs;\n\nconst Home = () => {\n \n  function callback(key) {\n    console.log(key);\n  }\n\n  \n    return (\n        <React.Fragment>\n                     {/* <Table style={{ marginTop: 10 }} columns={columns} dataSource={data} /> */}\n            <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                <TabPane tab=\"List Of Candidates\" key=\"1\">\n                <Candidats />\n                </TabPane>\n                <TabPane tab=\"List of Winners\" key=\"2\">\n                <Winners />\n                </TabPane>\n                <TabPane tab=\"Candidate Election Result\" key=\"4\">\n                  <Result />\n                </TabPane>\n                <TabPane tab=\"Polling Stations\" key=\"3\">\n                <PollingStation />\n                </TabPane>\n            </Tabs>\n\n        </React.Fragment>\n    );\n};\n\nexport default Home;\n"],"sourceRoot":""}