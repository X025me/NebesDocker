{"version":3,"sources":["views/maps/google-maps/InfoBox.js","views/maps/google-maps/MarkerClusterer.js","views/maps/google-maps/Marker.js","views/maps/google-maps/StreetViewPanorma.js","views/maps/GoogleMaps.js","components/Widgets/Statistic/Notification.js"],"names":["StyledMapWithAnInfoBox","compose","withProps","googleMapURL","loadingElement","style","height","containerElement","mapElement","center","lat","lng","withStateHandlers","isOpen","onToggleOpen","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","defaultOptions","styles","fancyMapStyles","defaultPosition","google","maps","LatLng","options","closeBoxURL","enableEventPropagation","backgroundColor","opacity","padding","fontSize","fontColor","position","onClick","onCloseClick","MarkerClusterer","require","MapWithAMarkerClusterer","withHandlers","onMarkerClustererClick","markerClusterer","clickedMarkers","getMarkers","console","log","length","averageCenter","enableRetinaIcons","gridSize","markers","map","marker","latitude","longitude","photo_id","MapWithAMarker","GoogleMap","StreetViewPanorama","OverlayView","getPixelPositionOffset","width","x","y","StreetViewPanormaWithAnOverlayView","visible","mapPaneName","OVERLAY_LAYER","background","color","borderRadius","GoogleMaps","useState","setMarkers","useEffect","url","join","fetch","then","res","json","data","photos","Fragment","Row","Col","sm","message","link","xl","Card","Header","Title","as","Body","Marker","StreetViewPanorma","Notification","variant","Link","href","target","className"],"mappings":"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","file":"static/js/22.8634c940.chunk.js","sourcesContent":["/*global google*/\n\nimport InfoBox from 'react-google-maps/lib/components/addons/InfoBox';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { compose, withProps, withStateHandlers } from 'recompose';\nimport fancyMapStyles from './fancy-map-styles.json';\n\nconst StyledMapWithAnInfoBox = compose(\n    withProps({\n        googleMapURL:\n            'https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places',\n        loadingElement: <div style={{ height: `100%` }} />,\n        containerElement: <div style={{ height: `400px` }} />,\n        mapElement: <div style={{ height: `100%` }} />,\n        center: { lat: 28.5274851, lng: 77.1389452 }\n    }),\n    withStateHandlers(\n        () => ({\n            isOpen: false\n        }),\n        {\n            onToggleOpen: ({ isOpen }) => () => ({\n                isOpen: !isOpen\n            })\n        }\n    ),\n    withScriptjs,\n    withGoogleMap\n)((props) => (\n    <GoogleMap defaultZoom={5} defaultCenter={props.center} defaultOptions={{ styles: fancyMapStyles }}>\n        <InfoBox\n            defaultPosition={new google.maps.LatLng(props.center.lat, props.center.lng)}\n            options={{ closeBoxURL: ``, enableEventPropagation: true }}\n        >\n            <div style={{ backgroundColor: `yellow`, opacity: 0.75, padding: `12px` }}>\n                <div style={{ fontSize: `16px`, fontColor: `#08233B` }}>Hello, India!</div>\n            </div>\n        </InfoBox>\n        <Marker position={{ lat: 23.0204978, lng: 72.4396583 }} onClick={props.onToggleOpen}>\n            {props.isOpen && (\n                <InfoBox onCloseClick={props.onToggleOpen} options={{ closeBoxURL: ``, enableEventPropagation: true }}>\n                    <div style={{ backgroundColor: `yellow`, opacity: 0.75, padding: `12px` }}>\n                        <div style={{ fontSize: `16px`, fontColor: `#08233B` }}>Hello, Gujarat!</div>\n                    </div>\n                </InfoBox>\n            )}\n        </Marker>\n    </GoogleMap>\n));\n\nexport default StyledMapWithAnInfoBox;\n","import { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { compose, withProps, withHandlers } from 'recompose';\n\nconst { MarkerClusterer } = require('react-google-maps/lib/components/addons/MarkerClusterer');\n\nconst MapWithAMarkerClusterer = compose(\n    withProps({\n        googleMapURL:\n            'https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places',\n        loadingElement: <div style={{ height: `100%` }} />,\n        containerElement: <div style={{ height: `400px` }} />,\n        mapElement: <div style={{ height: `100%` }} />\n    }),\n    withHandlers({\n        onMarkerClustererClick: () => (markerClusterer) => {\n            const clickedMarkers = markerClusterer.getMarkers();\n            console.log(`Current clicked markers length: ${clickedMarkers.length}`);\n            console.log(clickedMarkers);\n        }\n    }),\n    withScriptjs,\n    withGoogleMap\n)((props) => (\n    <GoogleMap defaultZoom={3} defaultCenter={{ lat: 25.0391667, lng: 121.525 }}>\n        <MarkerClusterer onClick={props.onMarkerClustererClick} averageCenter enableRetinaIcons gridSize={60}>\n            {props.markers.map((marker) => (\n                <Marker key={marker.photo_id} position={{ lat: marker.latitude, lng: marker.longitude }} />\n            ))}\n        </MarkerClusterer>\n    </GoogleMap>\n));\n\nexport default MapWithAMarkerClusterer;\n","import { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { compose } from 'recompose';\n\nconst MapWithAMarker = compose(\n    withScriptjs,\n    withGoogleMap\n)((props) => (\n    <GoogleMap defaultZoom={8} defaultCenter={{ lat: 28.5274851, lng: 77.1389452 }}>\n        <Marker position={{ lat: 28.5274851, lng: 77.1389452 }} />\n    </GoogleMap>\n));\n\nexport default MapWithAMarker;\n","const { compose, withProps } = require('recompose');\n\nconst { withScriptjs, withGoogleMap, GoogleMap, StreetViewPanorama, OverlayView } = require('react-google-maps');\n\nconst getPixelPositionOffset = (width, height) => ({\n    x: -(width / 2),\n    y: -(height / 2)\n});\n\nconst StreetViewPanormaWithAnOverlayView = compose(\n    withProps({\n        googleMapURL:\n            'https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places',\n        loadingElement: <div style={{ height: `100%` }} />,\n        containerElement: <div style={{ height: `400px` }} />,\n        mapElement: <div style={{ height: `100%` }} />,\n        center: { lat: 49.2853171, lng: -123.1119202 }\n    }),\n    withScriptjs,\n    withGoogleMap\n)((props) => (\n    <GoogleMap defaultZoom={8} defaultCenter={props.center}>\n        <StreetViewPanorama defaultPosition={props.center} visible>\n            <OverlayView\n                position={{ lat: 49.28590291211115, lng: -123.11248166065218 }}\n                mapPaneName={OverlayView.OVERLAY_LAYER}\n                getPixelPositionOffset={getPixelPositionOffset}\n            >\n                <div style={{ background: `red`, color: `white`, padding: 5, borderRadius: `50%` }}>OverlayView</div>\n            </OverlayView>\n        </StreetViewPanorama>\n    </GoogleMap>\n));\n\nexport default StreetViewPanormaWithAnOverlayView;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport InfoBox from './google-maps/InfoBox';\nimport MarkerClusterer from './google-maps/MarkerClusterer';\nimport Marker from './google-maps/Marker';\nimport StreetViewPanorma from './google-maps/StreetViewPanorma';\nimport ModuleNotification from '../../components/Widgets/Statistic/Notification';\n\nimport fetch from 'isomorphic-fetch';\n\nconst GoogleMaps = () => {\n    const [markers, setMarkers] = useState([]);\n\n    useEffect(() => {\n        const url = [\n            // Length issue\n            `https://gist.githubusercontent.com`,\n            `/farrrr/dfda7dd7fccfec5474d3`,\n            `/raw/758852bbc1979f6c4522ab4e92d1c92cba8fb0dc/data.json`\n        ].join('');\n\n        fetch(url)\n            .then((res) => res.json())\n            .then((data) => {\n                setMarkers(data.photos);\n            });\n\n        return () => {\n            setMarkers([]);\n        };\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Row>\n                <Col sm={12}>\n                    <ModuleNotification\n                        message=\"For more info please check the components's official documentation\"\n                        link=\"https://www.npmjs.com/package/react-google-maps\"\n                    />\n                </Col>\n            </Row>\n            <Row>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Default Marker</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Marker\n                                googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places\"\n                                loadingElement={<div style={{ height: `100%` }} />}\n                                containerElement={<div style={{ height: `400px` }} />}\n                                mapElement={<div style={{ height: `100%` }} />}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Infobox</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <InfoBox />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Marker Clusterer</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <MarkerClusterer markers={markers} />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Street View Panorma</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <StreetViewPanorma />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default GoogleMaps;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Notification = (props) => {\n    return (\n        <React.Fragment>\n            <Alert variant=\"warning\">\n                {props.message}\n                <Alert.Link href={props.link} target=\"_blank\" className=\"float-right\">\n                    Demo & Documentation\n                </Alert.Link>\n            </Alert>\n        </React.Fragment>\n    );\n};\n\nexport default Notification;\n"],"sourceRoot":""}