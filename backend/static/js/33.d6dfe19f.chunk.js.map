{"version":3,"sources":["views/result/Request/index.js"],"names":["Option","Select","formItemLayout","labelCol","xs","span","sm","wrapperCol","Index","useState","loading","setLoading","title","setTitle","active","setActive","objects","setObjects","setError","setObjectsid","objtype","setObjType","setDescription","account","useSelector","state","style","textAlign","Item","label","hasFeedback","allowClear","onSelect","e","value","axios","get","API_SERVER1","headers","Authorization","token","then","response","console","log","data","catch","error","validateStatus","length","map","item","index","id","constituency","name","color","hoprconstituency","constituencyid","constituencyname","rules","required","message","TextArea","showCount","maxLength","onChange","target","justifyContent","marginLeft","type","htmlType"],"mappings":"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","file":"static/js/33.d6dfe19f.chunk.js","sourcesContent":["import React,  {useState, useEffect} from 'react'\nimport { SmileOutlined } from '@ant-design/icons';\nimport { Form, Input, Spin, Select, Button } from 'antd';\nimport { useSelector } from 'react-redux';\nimport { API_SERVER1 } from '../../../config/constant';\nimport axios from 'axios'\n\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 6 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 14 },\n  },\n};\n\n\nexport default function Index() {\n    const [model, setModel] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [title, setTitle] = useState('')\n    const [active, setActive] = useState(false)\n    const [objects, setObjects] = useState([])\n    const [error, setError] = useState(false)\n    const [objectsid, setObjectsid] = useState(0)\n    const [objtype, setObjType] = useState('')\n    const [description, setDescription] = useState('')\n    const account = useSelector((state) => state.account);\n\n    const getSelectedModelData = (value) =>{\n        setLoading(true)\n        setObjType(value)\n        axios\n          .get(API_SERVER1 + `data/requests/request_change/${value}`, { headers: { Authorization: `${account.token}` } })\n          .then(function (response) {\n            console.log(response)\n            setActive(true)\n            setLoading(false)\n            setObjects(response.data)\n          })\n          .catch(function (error) {\n            setLoading(false)\n            setError(true)\n          });\n\n    }\n    const onSelectModel = e =>{\n        if (e == 'newvotehoprgeneral' || e == 'newvotehopresult' || e=='newvotehoprmax'){ setTitle('House of Peoples Representative')}\n        else if (e == 'newvotercgeneral' || e == 'newvotercresult' || e == 'newvotercmax'){ setTitle('Regional Constituency ')}\n        \n        getSelectedModelData(e)\n    }\n  return (\n    <div>\n      <h3 style={{textAlign: 'center'}}>Change Request Form</h3>\n        <Form {...formItemLayout}>\n        <Form.Item label=\"Data Source\" hasFeedback>\n        <Select allowClear onSelect={onSelectModel}>\n            <Option value=\"newvotehoprgeneral\">HOPR General Data</Option>\n            <Option value=\"newvotehopresult\">HOPR Candidate Result Data</Option>\n            <Option value=\"newvotehoprmax\">HOPR Winner Data</Option>\n            <Option value=\"newvotercgeneral\">RC General Data</Option>\n            <Option value=\"newvotercresult\">RC Candidate Result Data</Option>\n            <Option value=\"newvotercmax\">RC Winner Data</Option>\n        </Select>\n        </Form.Item>\n        {objtype == 'newvotehopresult' ? <>\n        {active ? \n        <Form.Item label={title} validateStatus=\"warning\">\n          {!objects.length ?  <p style={{ color: 'red'}}>Error Loading Data, please check your connection and refresh the page</p> : \n          <Select onSelect={(e) => setObjectsid(e)} >{objects.map((item, index) =>(\n                  <Option key={index} value={item.id}>{item.constituency.name}</Option>\n              ))} \n          </Select>}\n      </Form.Item>\n       :\n        <div>{loading ? <Spin /> : null}</div>} </>: null}\n        \n        {objtype == 'newvotehoprmax' ? <>\n        {active ? \n        <Form.Item label={title} validateStatus=\"warning\">\n          {!objects.length ?  <p style={{ color: 'red'}}>Error Loading Data, please check your connection and refresh the page</p> : \n          <Select onSelect={(e) => setObjectsid(e)} >{objects.map((item, index) =>(\n                  <Option key={index} value={item.id}>{item.constituency.name}</Option>\n              ))} \n          </Select>}\n      </Form.Item>\n       :\n        <div>{loading ? <Spin /> : null}</div>} </>: null}\n                {objtype == 'newvotehoprgeneral' ? <>\n        {active ? \n        <Form.Item label={title} validateStatus=\"warning\">\n          {!objects.length ?  <p style={{ color: 'red'}}>Error Loading Data, please check your connection and refresh the page</p> : \n          <Select onSelect={(e) => setObjectsid(e)} >{objects.map((item, index) =>(\n                  <Option key={index} value={item.hoprconstituency.constituencyid}>{item.hoprconstituency.constituencyname}</Option>\n              ))} \n          </Select>}\n      </Form.Item>\n       :\n        <div>{loading ? <Spin /> : null}</div>} </>: null}\n      <Form.Item\n        name=\"Description\"\n        label=\"Description\"\n        rules={[{ required: true, message: 'Please input Description' }]}\n      >\n        <Input.TextArea showCount maxLength={100} onChange={(e) => setDescription(e.target.value)} />\n      </Form.Item>\n      <Form.Item style={{justifyContent: 'right', marginLeft: '62%'}}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Send\n        </Button>\n      </Form.Item>\n    \n    </Form>\n  </div>\n  )\n}\n"],"sourceRoot":""}